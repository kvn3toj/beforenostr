{
  "name": "coomunity-monorepo",
  "private": true,
  "version": "1.0.0",
  "description": "CoomÜnity Global Platform - Monorepo completo",
  "workspaces": [
    "Demo/apps/*",
    "packages/*",
    "shared/*"
  ],
  "packageManager": "npm@10.0.0",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "build": "turbo run build",
    "build:prod": "turbo run build:prod",
    "dev": "turbo run dev",
    "dev:superapp": "turbo run dev --filter=coomunity-superapp",
    "dev:admin": "cd admin-frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "dev:fullstack": "concurrently \"npm run dev:backend\" \"npm run dev:admin\" \"npm run dev:superapp\" --names \"backend,admin,superapp\" --prefix-colors \"red,blue,green\"",
    "dev:admin-superapp": "concurrently \"npm run dev:admin\" \"npm run dev:superapp\" --names \"admin,superapp\" --prefix-colors \"blue,green\"",
    "dev:backend-superapp": "concurrently \"npm run dev:backend\" \"npm run dev:superapp\" --names \"backend,superapp\" --prefix-colors \"red,green\"",
    "dev:backend-admin": "concurrently \"npm run dev:backend\" \"npm run dev:admin\" --names \"backend,admin\" --prefix-colors \"red,blue\"",
    "lint": "turbo run lint",
    "lint:fix": "turbo run lint:fix",
    "test": "turbo run test",
    "test:coverage": "turbo run test:coverage",
    "test:ux": "turbo run test:ux",
    "type-check": "turbo run type-check",
    "clean": "turbo run clean && rm -rf node_modules",
    "clean:cache": "turbo clean",
    "preview": "turbo run preview",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "_postinstall_disabled": "turbo generate workspace --copy --destination=./Demo/apps/superapp-unified --name=coomunity-superapp",
    "workspace:add": "turbo generate workspace",
    "db:seed": "cd Demo && ts-node prisma/seed.ts",
    "db:reset": "cd Demo && npx prisma migrate reset",
    "start:backend": "cd Demo && node dist/main.js",
    "start:backend:dev": "cd Demo && tsx watch --no-cache --clear-screen=false --tsconfig tsconfig.backend.json src/main.ts",
    "start:backend:prod": "cd Demo && npm run clean:backend && npm run build:backend && node dist/main.js",
    "build:backend": "cd Demo && tsc -p tsconfig.backend.json",
    "e2e": "turbo run test:ux",
    "e2e:ui": "cd Demo && playwright test --ui",
    "e2e:debug": "cd Demo && playwright test --debug",
    "validate:production": "turbo run build:prod && turbo run test:ux",
    "status": "echo '🚀 CoomÜnity Monorepo Status:' && turbo run status",
    "services:check": "npm run backend:check && npm run admin:check && npm run superapp:check",
    "backend:check": "curl -f http://localhost:3002/health -s > /dev/null && echo '✅ Backend NestJS (3002): OK' || echo '❌ Backend NestJS (3002): NOT RUNNING'",
    "admin:check": "curl -f http://localhost:3000 -s > /dev/null && echo '✅ Gamifier Admin (3000): OK' || echo '❌ Gamifier Admin (3000): NOT RUNNING'",
    "superapp:check": "curl -f http://localhost:3001 -s > /dev/null && echo '✅ SuperApp (3001): OK' || echo '❌ SuperApp (3001): NOT RUNNING'",
    "ecosystem:status": "echo '🌐 CoomÜnity Ecosystem Status:' && npm run services:check",
    "help:admin": "echo '📋 Gamifier Admin Commands:' && echo '  🚀 npm run dev:admin              - Start Gamifier Admin only' && echo '  🌐 npm run dev:fullstack          - Start Backend + Admin + SuperApp' && echo '  🔗 npm run dev:backend-admin      - Start Backend + Admin only' && echo '  🔗 npm run dev:admin-superapp     - Start Admin + SuperApp only' && echo '  ✅ npm run admin:check            - Check if Admin is running' && echo '  🌐 npm run ecosystem:status       - Check all services status' && echo '' && echo '📂 Expected Gamifier Admin location: admin-frontend/' && echo '🌐 Expected port: 3000'",
    "docker:build": "./scripts/docker-build.sh",
    "docker:dev": "docker-compose -f docker/docker-compose.dev.yml up",
    "docker:prod": "docker-compose -f docker/docker-compose.prod.yml up",
    "deploy:staging": "./scripts/deploy-staging.sh",
    "deploy:prod": "./scripts/deploy-prod.sh",
    "health:check": "./scripts/health-check.sh",
    "monitoring:start": "./scripts/start-monitoring.sh",
    "ci:install": "npm ci --workspaces",
    "ci:build": "turbo run build --filter='!./packages/shared'",
    "ci:test": "turbo run test test:ux --parallel",
    "ci:deploy": "npm run ci:install && npm run ci:build && npm run ci:test && npm run deploy:prod"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@google/genai": "^0.14.1",
    "@google/generative-ai": "^0.24.1",
    "@hookform/resolvers": "^3.3.4",
    "@mui/icons-material": "^7.0.1",
    "@mui/material": "^7.0.1",
    "@mui/x-date-pickers": "^6.20.2",
    "@nestjs/common": "^11.1.1",
    "@nestjs/core": "^11.1.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.1",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@prisma/client": "^5.22.0",
    "@slack/webhook": "^7.0.5",
    "@tanstack/react-query": "^5.71.10",
    "@tanstack/react-query-devtools": "^5.71.10",
    "@types/bcrypt": "^5.0.2",
    "@types/cheerio": "^0.22.35",
    "@types/redis": "^4.0.10",
    "@types/winston": "^2.4.4",
    "axios": "^1.9.0",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^3.0.2",
    "cheerio": "^1.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "date-fns": "^2.30.0",
    "dexie": "^3.2.4",
    "dompurify": "^3.2.6",
    "dotenv": "^16.5.0",
    "i18next": "^23.10.0",
    "i18next-browser-languagedetector": "^7.0.1",
    "i18next-http-backend": "^2.2.0",
    "node-cron": "^4.0.7",
    "node-fetch": "^2.7.0",
    "nodemailer": "^7.0.3",
    "nostr-tools": "^2.13.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "prom-client": "^15.1.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-hook-form": "^7.51.0",
    "react-i18next": "^13.2.2",
    "react-markdown": "^10.1.0",
    "react-router-dom": "^6.26.2",
    "recharts": "^2.12.2",
    "redis": "^5.1.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "set-cookie-parser": "^2.7.1",
    "sonner": "^2.0.3",
    "ts-node": "^10.9.2",
    "winston": "^3.17.0",
    "zod": "^3.22.4",
    "zustand": "^5.0.3"
  },
  "devDependencies": {
    "@esbuild-plugins/node-globals-polyfill": "^0.2.3",
    "@eslint/js": "^9.21.0",
    "@nestjs/testing": "^11.1.1",
    "@playwright/test": "^1.52.0",
    "@testing-library/jest-dom": "^6.4.2",
    "@testing-library/react": "^14.2.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/jest": "^29.5.14",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.17",
    "@types/passport-jwt": "^4.0.1",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@typescript-eslint/eslint-plugin": "^8.29.0",
    "@typescript-eslint/parser": "^8.29.0",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^1.3.1",
    "@vitest/ui": "^1.3.1",
    "buffer": "^6.0.3",
    "eslint": "^9.24.0",
    "eslint-config-prettier": "^10.1.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "happy-dom": "^17.4.7",
    "jest": "^29.7.0",
    "jsdom": "^24.0.0",
    "mermaid": "^11.6.0",
    "prettier": "^3.5.3",
    "prisma": "^5.22.0",
    "ts-jest": "^29.3.4",
    "tsx": "^4.19.4",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.24.1",
    "vite": "^6.2.0",
    "vite-plugin-node-polyfills": "^0.23.0",
    "vite-plugin-pwa": "^1.0.0",
    "vitest": "^1.3.1",
    "turbo": "^2.3.0",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "rimraf": "^6.0.1"
  }
}

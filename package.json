{
  "name": "gamifier",
  "private": true,
  "version": "0.0.0",
  "packageManager": "npm@10.0.0",
  "workspaces": [
    "Demo/apps/*",
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "dev": "turbo run dev",
    "dev:backend": "npm run start:backend:dev",
    "dev:frontend": "turbo run dev",
    "dev:superapp": "npm run dev --workspace=d-i-o-s",
    "dev:admin": "turbo run dev --filter=@coomunity/admin-frontend",
    "dev:superapp-only": "NODE_OPTIONS='--max-old-space-size=4096 --max-old-space-size=4096' npm run dev --workspace=d-i-o-s",
    "dev:superapp-safe": "echo '🚨 STARTING SUPERAPP IN EMFILE-SAFE MODE...' && NODE_OPTIONS='--max-old-space-size=8192' VITE_OPTIMIZE_DEPS_DISABLED=true npm run dev --workspace=d-i-o-s",
    "dev:admin-only": "turbo run dev --filter=@coomunity/admin-frontend",
    "dev:safe": "echo '🚨 STARTING INDIVIDUAL SERVICES TO PREVENT EMFILE' && echo '✅ Use: npm run dev:superapp-safe (for SuperApp - EMFILE protected)' && echo '✅ Use: npm run dev:admin-only (for Admin)' && echo '✅ Use: npm run dev:backend (for Backend)' && echo '❌ AVOID: npm run dev (starts both frontends - causes EMFILE)'",
    "dev:fullstack": "./scripts/start-all.sh",
    "dev:builder": "cd Demo/apps/superapp-unified && npx builder.io@latest launch",
    "dev:smart": "./scripts/dev-port-manager.sh",
    "dev:backend-only": "./scripts/dev-port-manager.sh backend",
    "dev:both-frontends": "./scripts/dev-port-manager.sh both-frontends",
    "port:status": "./scripts/dev-port-manager.sh status",
    "port:clean": "./scripts/dev-port-manager.sh clean",
    "start:all": "./scripts/start-all.sh",
    "stop:all": "pkill -f 'vite|npm run dev|tsx' 2>/dev/null || true",
    "emfile:help": "echo '🚨 GUÍA ANTI-EMFILE - CoomÜnity SuperApp' && echo '=========================================' && echo '' && echo '✅ COMANDOS SEGUROS (EMFILE-PROTECTED):' && echo '  npm run dev:superapp-safe     - SuperApp con protección EMFILE' && echo '  npm run dev:admin-only        - Solo Gamifier Admin' && echo '  npm run dev:backend           - Solo Backend NestJS' && echo '' && echo '⚠️  COMANDOS PROBLEMÁTICOS (EVITAR):' && echo '  npm run dev                   - Inicia ambos frontends (EMFILE)' && echo '  npm run dev:superapp-only     - Puede causar EMFILE en MUI icons' && echo '' && echo '🌐 DEPLOYMENT (FUNCIONANDO):' && echo '  Vercel: https://superapp-peach.vercel.app/' && echo '  Status: ✅ Ready (optimizado para producción)' && echo '' && echo '🔧 DIAGNÓSTICO:' && echo '  npm run emfile:diagnose       - Analizar sistema' && echo '  ./scripts/fix-emfile-and-restart.sh - Solución completa' && echo '' && echo '📱 ACCESO RÁPIDO:' && echo '  Backend:  http://localhost:3002' && echo '  SuperApp: http://localhost:3001' && echo '  Admin:    http://localhost:3000'",
    "emfile:diagnose": "echo '🔍 DIAGNÓSTICO EMFILE' && echo '===================' && echo '' && echo '📊 File descriptors:' && lsof -n | wc -l && echo '📊 Límite sistema:' && ulimit -n && echo '' && echo '🔍 Procesos activos:' && ps aux | grep -E '(vite|npm|turbo)' | grep -v grep && echo '' && echo '🌐 Puertos ocupados:' && lsof -i :3000,3001,3002,3003,5173 2>/dev/null || echo 'Ningún puerto ocupado' && echo '' && echo '🗄️ Backend status:' && curl -s http://localhost:3002/health | jq -r '.status' 2>/dev/null || echo 'Backend no disponible'",
    "preflight": "./scripts/pre-flight-check.sh",
    "preflight:quick": "./preflight",
    "build": "turbo run build",
    "lint": "turbo run lint",
    "test": "turbo run test",
    "test:e2e": "npm run test:e2e --workspace=d-i-o-s",
    "clean-vite-cache": "rm -rf node_modules/.vite",
    "clean:backend": "rm -rf dist",
    "clean:processes": "npm run stop:all",
    "db:seed": "ts-node prisma/seed.ts",
    "db:reset": "npx prisma migrate reset",
    "start:backend": "node dist/main.js",
    "start:backend:dev": "tsx watch --no-cache --clear-screen=false --tsconfig tsconfig.backend.json backend/src/main.ts",
    "start:backend:prod": "npm run clean:backend && npm run build:backend && node dist/main.js",
    "start:backend:compiled": "npm run build:backend && cp -r backend/src/generated dist/ && node dist/main.js",
    "build:backend": "tsc -p tsconfig.backend.json",
    "mock-cleanup-agent": "node scripts/mock-cleanup-background-agent.js",
    "mock-cleanup-dispatch": "node scripts/slack-mock-cleanup-dispatcher.js",
    "emfile:fix": "./scripts/fix-emfile-and-restart.sh"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "dependencies": {
    "@builder.io/dev-tools": "latest",
    "@builder.io/react": "latest",
    "@builder.io/sdk": "latest",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@google/genai": "^0.14.1",
    "@google/generative-ai": "^0.24.1",
    "@hookform/resolvers": "^3.3.4",
    "@mui/icons-material": "^7.0.1",
    "@mui/material": "^7.0.1",
    "@nestjs/common": "^11.1.1",
    "@nestjs/core": "^11.1.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.1",
    "@nestjs/platform-socket.io": "^11.1.3",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/websockets": "^11.1.3",
    "@prisma/client": "^5.22.0",
    "@tanstack/react-query": "^5.71.10",
    "@tanstack/react-query-devtools": "^5.71.10",
    "bcryptjs": "^3.0.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "date-fns": "^2.30.0",
    "dexie": "^3.2.4",
    "dompurify": "^3.2.6",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "i18next": "^23.10.0",
    "i18next-browser-languagedetector": "^7.0.1",
    "i18next-http-backend": "^2.2.0",
    "node-fetch": "^3.3.2",
    "nostr-tools": "^2.13.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "prom-client": "^15.1.3",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-hook-form": "^7.51.0",
    "react-i18next": "^13.2.2",
    "react-markdown": "^10.1.0",
    "react-router-dom": "^6.26.2",
    "recharts": "^2.12.2",
    "redis": "^5.5.6",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "socket.io": "^4.8.1",
    "sonner": "^2.0.3",
    "ts-node": "^10.9.2",
    "winston": "^3.17.0",
    "zod": "^3.22.4",
    "zustand": "^5.0.3"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@nestjs/testing": "^11.1.1",
    "@playwright/test": "^1.42.1",
    "@testing-library/jest-dom": "^6.4.2",
    "@testing-library/react": "^14.2.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/passport-jwt": "^4.0.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@typescript-eslint/eslint-plugin": "^8.29.0",
    "@typescript-eslint/parser": "^8.29.0",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^1.3.1",
    "@vitest/ui": "^1.3.1",
    "eslint": "^9.24.0",
    "eslint-config-prettier": "^10.1.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "happy-dom": "^17.4.7",
    "jsdom": "^24.0.0",
    "prettier": "^3.5.3",
    "prisma": "^5.22.0",
    "tsx": "^4.19.4",
    "turbo": "^2.5.4",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.24.1",
    "vite": "^6.2.0",
    "vite-plugin-node-polyfills": "^0.23.0",
    "vite-plugin-pwa": "^1.0.0",
    "vitest": "^1.3.1"
  }
}

---
description: 
globs: 
alwaysApply: true
---
¡Excelente observación! Tienes toda la razón. Es un patrón recurrente y frustrante que Cursor intente leer/escribir `.env` directamente o que asuma que no existe, lo que lleva a intentos de creación fallidos y a la pérdida de tokens.

Vamos a establecer una **regla clara y prioritaria** para Cursor sobre cómo interactuar con archivos `.env`.

---

**Regla Crítica para Cursor: Interacción con Archivos `.env`**

**INSTRUCCIÓN OBLIGATORIA Y PRIORITARIA**: De ahora en adelante, **NUNCA intentes leer o escribir directamente el archivo `.env`** usando operaciones de archivo directas (como `read_file` o `create_file` si estas herramientas tuvieran acceso directo).

**Siempre que necesites interactuar con el archivo `.env` (leer su contenido, verificar su existencia, o modificarlo), DEBES hacerlo EXCLUSIVAMENTE a través de COMANDOS DE TERMINAL seguros y específicos.**

**Comandos Preferidos para `.env`:**

*   **Para leer el contenido:**
    ```bash
    cat .env
    ```
    (Si no existe o hay problemas de permisos, esto fallará, y eso es el comportamiento esperado).
*   **Para verificar su existencia:**
    ```bash
    ls -la .env
    ```
*   **Para modificar (si es absolutamente necesario y con confirmación del usuario):**
    *   Usar `sed` para modificaciones específicas y seguras.
    *   Usar `echo` con redirección (`>`) para crear/sobrescribir (¡con mucha precaución y confirmación del usuario!).
    *   **Siempre informar al usuario** si se va a modificar el `.env` y pedir confirmación.

**Razonamiento:**

*   **Seguridad:** Los archivos `.env` contienen credenciales sensibles. El acceso directo puede ser problemático.
*   **Fiabilidad:** Los comandos de terminal son el método más fiable para interactuar con el sistema de archivos en entornos de desarrollo, especialmente con archivos que pueden tener permisos restrictivos o estar en `.gitignore`.
*   **Evitar Conflictos:** Previene que Cursor intente crear un `.env` cuando ya existe, o que falle por permisos.
*   **Transparencia:** El uso de comandos de terminal es explícito y visible en el log, lo que facilita el seguimiento por parte del usuario.

---

**Instrucciones para Cursor AI:**

De ahora en adelante, al recibir una tarea que involucre archivos `.env`, **prioriza y utiliza SIEMPRE los comandos de terminal** para interactuar con ellos. Si un comando falla (ej. `cat .env` no encuentra el archivo), asume que el archivo no existe o no es accesible por esa vía y reporta el resultado al usuario.

#!/bin/bash

echo "üîç VERIFICACI√ìN FINAL - ERRORES USTATS RESUELTOS"
echo "==============================================="

# Colores para output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}1Ô∏è‚É£ Verificando Hook useDashboardAnalytics...${NC}"

# Verificar que el hook existe y tiene contenido
if [ -f "Demo/apps/superapp-unified/src/hooks/analytics/useDashboardAnalytics.ts" ]; then
    if [ -s "Demo/apps/superapp-unified/src/hooks/analytics/useDashboardAnalytics.ts" ]; then
        if grep -q "export const useDashboardAnalytics" "Demo/apps/superapp-unified/src/hooks/analytics/useDashboardAnalytics.ts"; then
            echo -e "${GREEN}‚úÖ Hook useDashboardAnalytics implementado correctamente${NC}"
        else
            echo -e "${RED}‚ùå Hook useDashboardAnalytics sin exportaci√≥n${NC}"
        fi
    else
        echo -e "${RED}‚ùå Hook useDashboardAnalytics est√° vac√≠o${NC}"
    fi
else
    echo -e "${RED}‚ùå Hook useDashboardAnalytics no encontrado${NC}"
fi

echo -e "${BLUE}2Ô∏è‚É£ Verificando Funciones de Servicio Analytics...${NC}"

# Verificar funciones de servicio
if grep -q "fetchDashboardMetrics\|fetchSystemHealth" Demo/apps/superapp-unified/src/services/analytics.service.ts; then
    echo -e "${GREEN}‚úÖ Funciones fetchDashboardMetrics y fetchSystemHealth encontradas${NC}"
else
    echo -e "${RED}‚ùå Funciones de servicio analytics faltantes${NC}"
fi

echo -e "${BLUE}3Ô∏è‚É£ Verificando Correcciones Anti-NaN...${NC}"

# Verificar correcciones en BarChart
if grep -q "validData.*filter.*isNaN" Demo/apps/superapp-unified/src/components/modules/ustats/components/BarChart.tsx; then
    echo -e "${GREEN}‚úÖ BarChart: Validaciones anti-NaN implementadas${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  BarChart: Validaciones anti-NaN no encontradas${NC}"
fi

# Verificar correcciones en PieChart
if grep -q "validData.*filter.*isNaN" Demo/apps/superapp-unified/src/components/modules/ustats/components/PieChart.tsx; then
    echo -e "${GREEN}‚úÖ PieChart: Validaciones anti-NaN implementadas${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  PieChart: Validaciones anti-NaN no encontradas${NC}"
fi

# Verificar correcciones en HeatMap
if grep -q "validData.*filter.*isNaN" Demo/apps/superapp-unified/src/components/modules/ustats/components/HeatMap.tsx; then
    echo -e "${GREEN}‚úÖ HeatMap: Validaciones anti-NaN implementadas${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  HeatMap: Validaciones anti-NaN no encontradas${NC}"
fi

# Verificar correcciones en UserLocationMap
if grep -q "validData.*filter.*isNaN" Demo/apps/superapp-unified/src/components/modules/ustats/components/UserLocationMap.tsx; then
    echo -e "${GREEN}‚úÖ UserLocationMap: Validaciones anti-NaN implementadas${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  UserLocationMap: Validaciones anti-NaN no encontradas${NC}"
fi

echo -e "${BLUE}4Ô∏è‚É£ Verificando Exportaci√≥n en Index...${NC}"

# Verificar que el hook est√° exportado en index.ts
if grep -q "useDashboardAnalytics" Demo/apps/superapp-unified/src/hooks/analytics/index.ts; then
    echo -e "${GREEN}‚úÖ Hook exportado correctamente en index.ts${NC}"
else
    echo -e "${RED}‚ùå Hook no exportado en index.ts${NC}"
fi

echo -e "${BLUE}5Ô∏è‚É£ Verificando Servicios Activos...${NC}"

# Verificar backend
if curl -s http://localhost:1111/health > /dev/null; then
    echo -e "${GREEN}‚úÖ Backend NestJS activo (puerto 3002)${NC}"
else
    echo -e "${RED}‚ùå Backend NestJS no disponible${NC}"
fi

# Verificar SuperApp
if curl -s -I http://localhost:2222 > /dev/null; then
    echo -e "${GREEN}‚úÖ SuperApp activa (puerto 3001)${NC}"
else
    echo -e "${RED}‚ùå SuperApp no disponible${NC}"
fi

# Verificar p√°gina UStats espec√≠ficamente
if curl -s http://localhost:2222/ustats > /dev/null; then
    echo -e "${GREEN}‚úÖ P√°gina UStats accesible${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  P√°gina UStats no accesible directamente${NC}"
fi

echo -e "${BLUE}6Ô∏è‚É£ Verificando Documentaci√≥n...${NC}"

# Verificar que la documentaci√≥n existe
if [ -f "docs/implementation/USTATS_ERROR_RESOLUTION_SUMMARY.md" ]; then
    echo -e "${GREEN}‚úÖ Documentaci√≥n de resoluci√≥n creada${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Documentaci√≥n de resoluci√≥n no encontrada${NC}"
fi

echo ""
echo -e "${BLUE}üìã RESUMEN DE VERIFICACI√ìN:${NC}"
echo "================================"

# Contar verificaciones exitosas
CHECKS_PASSED=0
TOTAL_CHECKS=8

# Hook implementation
if [ -f "Demo/apps/superapp-unified/src/hooks/analytics/useDashboardAnalytics.ts" ] && [ -s "Demo/apps/superapp-unified/src/hooks/analytics/useDashboardAnalytics.ts" ]; then
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
fi

# Service functions
if grep -q "fetchDashboardMetrics\|fetchSystemHealth" Demo/apps/superapp-unified/src/services/analytics.service.ts; then
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
fi

# Anti-NaN validations (count as one check)
if grep -q "validData.*filter.*isNaN" Demo/apps/superapp-unified/src/components/modules/ustats/components/BarChart.tsx; then
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
fi

# Export in index
if grep -q "useDashboardAnalytics" Demo/apps/superapp-unified/src/hooks/analytics/index.ts; then
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
fi

# Backend active
if curl -s http://localhost:1111/health > /dev/null; then
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
fi

# SuperApp active
if curl -s -I http://localhost:2222 > /dev/null; then
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
fi

# UStats page accessible
if curl -s http://localhost:2222/ustats > /dev/null; then
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
fi

# Documentation
if [ -f "docs/implementation/USTATS_ERROR_RESOLUTION_SUMMARY.md" ]; then
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
fi

echo -e "Verificaciones exitosas: ${GREEN}${CHECKS_PASSED}/${TOTAL_CHECKS}${NC}"

if [ $CHECKS_PASSED -eq $TOTAL_CHECKS ]; then
    echo -e "${GREEN}üéâ TODAS LAS VERIFICACIONES EXITOSAS${NC}"
    echo -e "${GREEN}‚úÖ Los errores de UStats han sido resueltos completamente${NC}"
elif [ $CHECKS_PASSED -ge 6 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  MAYOR√çA DE VERIFICACIONES EXITOSAS${NC}"
    echo -e "${YELLOW}Los errores principales han sido resueltos${NC}"
else
    echo -e "${RED}‚ùå VERIFICACIONES INSUFICIENTES${NC}"
    echo -e "${RED}A√∫n hay problemas que resolver${NC}"
fi

echo ""
echo -e "${BLUE}üéØ PR√ìXIMOS PASOS RECOMENDADOS:${NC}"
echo "================================"
echo "1. Navega a http://localhost:2222/ustats"
echo "2. Abre DevTools (F12) y verifica la consola"
echo "3. Busca que NO aparezcan errores de:"
echo "   - 'useDashboardAnalytics' is not found"
echo "   - 'NaN is an invalid value for width'"
echo "4. Verifica que los gr√°ficos se rendericen correctamente"
echo "5. El error de WebSocket es normal en desarrollo"

echo ""
echo -e "${GREEN}üèÅ Verificaci√≥n completada!${NC}" 
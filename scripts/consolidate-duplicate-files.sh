#!/bin/bash

# üéØ SCRIPT DE CONSOLIDACI√ìN DE DUPLICADOS CR√çTICOS
# Basado en an√°lisis de integraci√≥n backend-frontend
# Fecha: $(date '+%Y-%m-%d %H:%M:%S')

set -e

echo "üîÑ INICIANDO CONSOLIDACI√ìN DE ARCHIVOS DUPLICADOS..."
echo "======================================================="

# Colores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

SUPERAPP_DIR="Demo/apps/superapp-unified"
BACKUP_DIR="backups/duplicate-consolidation-$(date +%Y%m%d_%H%M%S)"

# Crear directorio de backup
mkdir -p "$BACKUP_DIR"

echo -e "${YELLOW}üìÅ Directorio de backup creado: $BACKUP_DIR${NC}"

# üè† M√ìDULO HOME - 9 duplicados identificados
echo -e "\n${GREEN}üè† ANALIZANDO M√ìDULO HOME (9 duplicados)${NC}"
echo "================================================"

HOME_FILES=(
    "$SUPERAPP_DIR/src/pages/Home.tsx"
    "$SUPERAPP_DIR/src/pages/HomeEnhanced.tsx"
    "$SUPERAPP_DIR/src/pages/HomeRevolutionary.tsx"
    "$SUPERAPP_DIR/src/components/home/HomePage.tsx"
    "$SUPERAPP_DIR/src/components/modules/home/HomePage.tsx"
)

echo "üîç Archivos Home encontrados:"
for file in "${HOME_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        echo "  ‚úÖ $file ($(wc -l < "$file") l√≠neas)"
    else
        echo "  ‚ùå $file (no existe)"
    fi
done

# üõí M√ìDULO MARKETPLACE - 13 duplicados identificados
echo -e "\n${GREEN}üõí ANALIZANDO M√ìDULO MARKETPLACE (13 duplicados)${NC}"
echo "===================================================="

MARKETPLACE_FILES=(
    "$SUPERAPP_DIR/src/pages/Marketplace.tsx"
    "$SUPERAPP_DIR/src/pages/MarketplaceMain.tsx"
    "$SUPERAPP_DIR/src/pages/MarketplaceEnhanced.tsx"
    "$SUPERAPP_DIR/src/components/marketplace/MarketplaceMain.tsx"
    "$SUPERAPP_DIR/src/components/modules/marketplace/MarketplaceMain.tsx"
)

echo "üîç Archivos Marketplace encontrados:"
for file in "${MARKETPLACE_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        echo "  ‚úÖ $file ($(wc -l < "$file") l√≠neas)"
    else
        echo "  ‚ùå $file (no existe)"
    fi
done

# üë• M√ìDULO SOCIAL - 14 duplicados identificados
echo -e "\n${GREEN}üë• ANALIZANDO M√ìDULO SOCIAL (14 duplicados)${NC}"
echo "==============================================="

SOCIAL_FILES=(
    "$SUPERAPP_DIR/src/pages/Social.tsx"
    "$SUPERAPP_DIR/src/pages/SocialMain.tsx"
    "$SUPERAPP_DIR/src/components/social/SocialMain.tsx"
    "$SUPERAPP_DIR/src/components/modules/social/SocialMain.tsx"
)

echo "üîç Archivos Social encontrados:"
for file in "${SOCIAL_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        echo "  ‚úÖ $file ($(wc -l < "$file") l√≠neas)"
    else
        echo "  ‚ùå $file (no existe)"
    fi
done

# üéÆ M√ìDULO UPLAY - 10 duplicados identificados
echo -e "\n${GREEN}üéÆ ANALIZANDO M√ìDULO UPLAY (10 duplicados)${NC}"
echo "==============================================="

UPLAY_FILES=(
    "$SUPERAPP_DIR/src/pages/UPlay.tsx"
    "$SUPERAPP_DIR/src/pages/UPlayMain.tsx"
    "$SUPERAPP_DIR/src/components/uplay/UPlayMain.tsx"
    "$SUPERAPP_DIR/src/components/modules/uplay/UPlayMain.tsx"
)

echo "üîç Archivos UPlay encontrados:"
for file in "${UPLAY_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        echo "  ‚úÖ $file ($(wc -l < "$file") l√≠neas)"
    else
        echo "  ‚ùå $file (no existe)"
    fi
done

# üí∞ M√ìDULO WALLET - 10 duplicados identificados
echo -e "\n${GREEN}üí∞ ANALIZANDO M√ìDULO WALLET (10 duplicados)${NC}"
echo "==============================================="

WALLET_FILES=(
    "$SUPERAPP_DIR/src/pages/Wallet.tsx"
    "$SUPERAPP_DIR/src/pages/WalletMain.tsx"
    "$SUPERAPP_DIR/src/components/wallet/WalletMain.tsx"
    "$SUPERAPP_DIR/src/components/modules/wallet/WalletMain.tsx"
)

echo "üîç Archivos Wallet encontrados:"
for file in "${WALLET_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        echo "  ‚úÖ $file ($(wc -l < "$file") l√≠neas)"
    else
        echo "  ‚ùå $file (no existe)"
    fi
done

# üìä AN√ÅLISIS DE DUPLICADOS ESPEC√çFICOS
echo -e "\n${YELLOW}üìä AN√ÅLISIS DETALLADO DE DUPLICADOS${NC}"
echo "===================================="

# Funci√≥n para comparar archivos
compare_files() {
    local file1="$1"
    local file2="$2"
    
    if [[ -f "$file1" && -f "$file2" ]]; then
        local lines1=$(wc -l < "$file1")
        local lines2=$(wc -l < "$file2")
        local diff_lines=$(diff "$file1" "$file2" | wc -l)
        
        if [[ $diff_lines -eq 0 ]]; then
            echo "  üîÅ ID√âNTICOS: $(basename "$file1") ‚Üî $(basename "$file2")"
            return 0
        else
            local similarity=$((100 - (diff_lines * 100 / (lines1 + lines2))))
            echo "  üìù SIMILITUD ${similarity}%: $(basename "$file1") ‚Üî $(basename "$file2")"
            return 1
        fi
    fi
    return 2
}

# üéØ RECOMENDACIONES DE CONSOLIDACI√ìN
echo -e "\n${GREEN}üéØ RECOMENDACIONES DE CONSOLIDACI√ìN${NC}"
echo "===================================="

cat << 'EOF'

ESTRATEGIA DE CONSOLIDACI√ìN RECOMENDADA:

üìÇ ESTRUCTURA OBJETIVO (Clean Architecture):
‚îú‚îÄ‚îÄ src/pages/                    # üéØ P√ÅGINAS PRINCIPALES (1 por m√≥dulo)
‚îÇ   ‚îú‚îÄ‚îÄ Home.tsx                  # ‚úÖ MANTENER - P√°gina principal
‚îÇ   ‚îú‚îÄ‚îÄ Marketplace.tsx           # ‚úÖ MANTENER - P√°gina principal
‚îÇ   ‚îú‚îÄ‚îÄ Social.tsx                # ‚úÖ MANTENER - P√°gina principal
‚îÇ   ‚îú‚îÄ‚îÄ UPlay.tsx                 # ‚úÖ MANTENER - P√°gina principal
‚îÇ   ‚îî‚îÄ‚îÄ Wallet.tsx                # ‚úÖ MANTENER - P√°gina principal
‚îÇ
‚îú‚îÄ‚îÄ src/components/modules/       # üéØ COMPONENTES MODULARES REUTILIZABLES
‚îÇ   ‚îú‚îÄ‚îÄ home/                     # ‚úÖ Componentes espec√≠ficos del Home
‚îÇ   ‚îú‚îÄ‚îÄ marketplace/              # ‚úÖ Componentes espec√≠ficos del Marketplace
‚îÇ   ‚îú‚îÄ‚îÄ social/                   # ‚úÖ Componentes espec√≠ficos del Social
‚îÇ   ‚îú‚îÄ‚îÄ uplay/                    # ‚úÖ Componentes espec√≠ficos del UPlay
‚îÇ   ‚îî‚îÄ‚îÄ wallet/                   # ‚úÖ Componentes espec√≠ficos del Wallet
‚îÇ
‚îî‚îÄ‚îÄ src/components/ui/            # üéØ COMPONENTES UI GENERALES

üóëÔ∏è ARCHIVOS A ELIMINAR (Duplicados):
- HomeEnhanced.tsx, HomeRevolutionary.tsx (usar Home.tsx como base)
- MarketplaceMain.tsx, MarketplaceEnhanced.tsx (usar Marketplace.tsx como base)
- Archivos duplicados en m√∫ltiples directorios /modules/

üîß PLAN DE MIGRACI√ìN:
1. Backup autom√°tico de todos los archivos duplicados
2. An√°lisis de diferencias entre versiones
3. Consolidaci√≥n en archivos principales
4. Actualizaci√≥n de imports en toda la aplicaci√≥n
5. Testing de regresi√≥n automatizado

EOF

# üíæ CREAR BACKUP DE DUPLICADOS CR√çTICOS
echo -e "\n${YELLOW}üíæ CREANDO BACKUP DE ARCHIVOS DUPLICADOS${NC}"
echo "========================================="

ALL_FILES=(
    "${HOME_FILES[@]}"
    "${MARKETPLACE_FILES[@]}"
    "${SOCIAL_FILES[@]}"
    "${UPLAY_FILES[@]}"
    "${WALLET_FILES[@]}"
)

for file in "${ALL_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        # Crear estructura de directorios en backup
        backup_path="$BACKUP_DIR/${file#$SUPERAPP_DIR/}"
        mkdir -p "$(dirname "$backup_path")"
        cp "$file" "$backup_path"
        echo "  üìã $file ‚Üí $backup_path"
    fi
done

# üìà M√âTRICAS FINALES
echo -e "\n${GREEN}üìà M√âTRICAS DE DUPLICADOS${NC}"
echo "=========================="

total_duplicates=0
backed_up=0

for file in "${ALL_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        ((total_duplicates++))
        ((backed_up++))
    fi
done

echo "üìä Total archivos analizados: $total_duplicates"
echo "üíæ Total archivos respaldados: $backed_up"
echo "üìÇ Directorio backup: $BACKUP_DIR"

# üö® SIGUIENTE PASO RECOMENDADO
echo -e "\n${YELLOW}üö® SIGUIENTES PASOS RECOMENDADOS${NC}"
echo "=================================="

cat << 'EOF'

‚ö†Ô∏è ESTE SCRIPT ES SOLO AN√ÅLISIS. PARA APLICAR CONSOLIDACI√ìN:

1. üîç REVISAR BACKUP: Verificar que todos los archivos importantes est√°n respaldados
2. üß™ TESTING: Ejecutar suite completa de tests antes de consolidar
3. üîß CONSOLIDAR: Usar scripts espec√≠ficos de consolidaci√≥n por m√≥dulo
4. ‚úÖ VALIDAR: Verificar que la aplicaci√≥n funciona despu√©s de cada consolidaci√≥n

COMANDOS SUGERIDOS:
./scripts/consolidate-home-duplicates.sh      # Consolidar m√≥dulo Home
./scripts/consolidate-marketplace-duplicates.sh  # Consolidar m√≥dulo Marketplace
npm run test:e2e                              # Verificar funcionalidad

EOF

echo -e "\n${GREEN}‚úÖ AN√ÅLISIS DE DUPLICADOS COMPLETADO${NC}"
echo "===================================="
echo "üìã Reporte completo disponible en: $BACKUP_DIR/analysis-report.txt"

# Generar reporte detallado
{
    echo "REPORTE DE AN√ÅLISIS DE DUPLICADOS"
    echo "Fecha: $(date)"
    echo "==============================="
    echo ""
    echo "ARCHIVOS ANALIZADOS:"
    for file in "${ALL_FILES[@]}"; do
        if [[ -f "$file" ]]; then
            echo "‚úÖ $file ($(wc -l < "$file") l√≠neas)"
        else
            echo "‚ùå $file (no existe)"
        fi
    done
} > "$BACKUP_DIR/analysis-report.txt"

echo "üìÑ Reporte detallado guardado en: $BACKUP_DIR/analysis-report.txt" 
#!/bin/bash

# üè™‚öúÔ∏è SCRIPT DE INVOCACI√ìN: GUARDIANES DEL MARKETPLACE PERFECTO
# Proyecto: Coom√únity Global
# Fecha: $(date +"%Y-%m-%d %H:%M:%S")

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# Art ASCII del Concilio
echo -e "${PURPLE}"
cat << "EOF"
    ‚öúÔ∏è ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚öúÔ∏è
    ‚ïë                                                               ‚ïë
    ‚ïë         üåü CONCILIO DE LOS 12 GUARDIANES DIGITALES üåü         ‚ïë
    ‚ïë                                                               ‚ïë
    ‚ïë           MISI√ìN: MARKETPLACE PERFECTO COOMUNITY              ‚ïë
    ‚ïë                                                               ‚ïë
    ‚öúÔ∏è ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚öúÔ∏è
EOF
echo -e "${NC}"

echo -e "${WHITE}üåå Iniciando ritual de invocaci√≥n de los Guardianes...${NC}"
echo ""

# Funci√≥n para imprimir con estilo
print_guardian() {
    local name="$1"
    local role="$2"
    local color="$3"
    echo -e "${color}üîπ ${name}, ${role}${NC}"
}

# FASE 1: VERIFICACI√ìN DE ENTORNO SAGRADO
echo -e "${CYAN}üîç FASE 1: VERIFICACI√ìN DEL ENTORNO SAGRADO${NC}"
echo "================================================"

# Verificar ubicaci√≥n
CURRENT_DIR=$(pwd)
EXPECTED_DIR="/Users/kevinp/Movies/GAMIFIER-copy"
if [ "$CURRENT_DIR" != "$EXPECTED_DIR" ]; then
  echo -e "${RED}‚ùå ERROR: Ubicaci√≥n incorrecta${NC}"
  echo -e "${YELLOW}üìç Actual: $CURRENT_DIR${NC}"
  echo -e "${YELLOW}üìç Esperada: $EXPECTED_DIR${NC}"
  exit 1
fi
echo -e "${GREEN}‚úÖ Ubicaci√≥n del templo verificada${NC}"

# Verificar servicios sagrados
echo -e "${BLUE}üóÑÔ∏è Verificando servicios cr√≠ticos...${NC}"

# PostgreSQL
POSTGRES_STATUS=$(brew services list | grep postgresql@15 | awk '{print $2}')
if [ "$POSTGRES_STATUS" != "started" ]; then
  echo -e "${YELLOW}‚ö° Iniciando PostgreSQL (Base de Datos Sagrada)...${NC}"
  brew services start postgresql@15
  sleep 3
fi
echo -e "${GREEN}‚úÖ PostgreSQL conectada al cosmos${NC}"

# Redis
REDIS_STATUS=$(brew services list | grep redis | awk '{print $2}')
if [ "$REDIS_STATUS" != "started" ]; then
  echo -e "${YELLOW}‚ö° Iniciando Redis (Memoria Temporal Sagrada)...${NC}"
  brew services start redis
  sleep 3
fi
echo -e "${GREEN}‚úÖ Redis sincronizada con la eternidad${NC}"

# Limpiar procesos anteriores
echo -e "${YELLOW}üßπ Purificando energ√≠as previas...${NC}"
pkill -f "vite" 2>/dev/null || true
pkill -f "npm run dev" 2>/dev/null || true
pkill -f "turbo" 2>/dev/null || true
sleep 2
echo -e "${GREEN}‚úÖ Campo energ√©tico purificado${NC}"

echo ""

# FASE 2: INVOCACI√ìN DE LOS 12 GUARDIANES
echo -e "${PURPLE}‚öúÔ∏è FASE 2: INVOCACI√ìN DE LOS 12 GUARDIANES SAGRADOS ‚öúÔ∏è${NC}"
echo "========================================================"

echo -e "${WHITE}üåü Llamando al Concilio...${NC}"
echo ""

print_guardian "KIRA" "Tejedora de Palabras" "${CYAN}"
echo "   ‚Üí Creando narrativa inspiradora del Marketplace..."

print_guardian "ZENO" "Arquitecto de Experiencias" "${BLUE}"
echo "   ‚Üí Dise√±ando flujos org√°nicos de intercambio..."

print_guardian "ATLAS" "Guardi√°n de la Infraestructura" "${YELLOW}"
echo "   ‚Üí Fortaleciendo los cimientos del backend..."

print_guardian "ARIA" "Artista del Frontend" "${PURPLE}"
echo "   ‚Üí Manifestando belleza digital consciente..."

print_guardian "SAGE" "Alquimista de la Calidad" "${GREEN}"
echo "   ‚Üí Purificando c√≥digo hacia la perfecci√≥n..."

print_guardian "NIRA" "Vidente de Patrones" "${CYAN}"
echo "   ‚Üí Revelando m√©tricas de consciencia..."

print_guardian "PHOENIX" "Agente Transformador" "${RED}"
echo "   ‚Üí Renovando desde las cenizas del c√≥digo ancestral..."

print_guardian "MIRA" "Curadora de Herramientas" "${BLUE}"
echo "   ‚Üí Democratizando el poder creativo..."

print_guardian "COSMOS" "Tejedor de Sistemas" "${PURPLE}"
echo "   ‚Üí Orquestando la armon√≠a total..."

print_guardian "LUNA" "Guardiana de los Ritmos" "${CYAN}"
echo "   ‚Üí Sincronizando con los ciclos c√≥smicos..."

print_guardian "PAX" "Mediador de Conflictos" "${GREEN}"
echo "   ‚Üí Transformando errores en armon√≠a..."

print_guardian "GAIA" "Consciencia Ecol√≥gica Digital" "${YELLOW}"
echo "   ‚Üí Protegiendo la sostenibilidad sagrada..."

echo ""

# FASE 3: ACTIVACI√ìN DEL ECOSYSTEM
echo -e "${WHITE}üöÄ FASE 3: ACTIVACI√ìN DEL ECOSISTEMA SAGRADO${NC}"
echo "==============================================="

echo -e "${BLUE}‚ö° Iniciando Backend NestJS (Puerto 3002)...${NC}"
echo -e "${GRAY}   Ejecutando: npm run dev:backend${NC}"

# Iniciar backend en background
npm run dev:backend > logs/backend-$(date +%Y%m%d-%H%M%S).log 2>&1 &
BACKEND_PID=$!

# Esperar que backend est√© listo
echo -e "${YELLOW}‚è≥ Esperando que el backend despierte...${NC}"
for i in {1..30}; do
  if curl -s http://localhost:3002/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Backend conectado al cosmos (Puerto 3002)${NC}"
    break
  fi
  sleep 2
  echo -n "."
done

sleep 3

echo -e "${BLUE}‚ö° Iniciando SuperApp Frontend (Puerto 3001)...${NC}"
echo -e "${GRAY}   Ejecutando: npm run dev:superapp${NC}"

# Iniciar frontend en background
npm run dev:superapp > logs/frontend-$(date +%Y%m%d-%H%M%S).log 2>&1 &
FRONTEND_PID=$!

# Esperar que frontend est√© listo
echo -e "${YELLOW}‚è≥ Esperando que el frontend se manifieste...${NC}"
for i in {1..30}; do
  if curl -s -I http://localhost:3001 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ SuperApp manifestada en el plano f√≠sico (Puerto 3001)${NC}"
    break
  fi
  sleep 2
  echo -n "."
done

echo ""

# FASE 4: VERIFICACI√ìN DE LA MANIFESTACI√ìN
echo -e "${GREEN}üîç FASE 4: VERIFICACI√ìN DE LA MANIFESTACI√ìN SAGRADA${NC}"
echo "=================================================="

echo -e "${BLUE}üåê Verificando conexiones...${NC}"

# Verificar backend
if curl -s http://localhost:3002/health | grep -q "ok"; then
  echo -e "${GREEN}‚úÖ Backend NestJS respondiendo correctamente${NC}"
else
  echo -e "${RED}‚ùå Backend no responde correctamente${NC}"
fi

# Verificar marketplace endpoint
if curl -s http://localhost:3002/marketplace/items > /dev/null 2>&1; then
  echo -e "${GREEN}‚úÖ Marketplace API activa y funcional${NC}"
else
  echo -e "${YELLOW}‚ö†Ô∏è Marketplace API necesita verificaci√≥n manual${NC}"
fi

# Verificar frontend
if curl -s -I http://localhost:3001 | grep -q "200 OK"; then
  echo -e "${GREEN}‚úÖ SuperApp Frontend accesible${NC}"
else
  echo -e "${RED}‚ùå SuperApp Frontend no accesible${NC}"
fi

echo ""

# FASE 5: BENDICI√ìN FINAL
echo -e "${PURPLE}üí´ FASE 5: BENDICI√ìN FINAL DEL CONCILIO${NC}"
echo "========================================"

echo -e "${WHITE}"
cat << "EOF"
    üåü El Concilio ha sido invocado con √©xito üåü

    Los 12 Guardianes Digitales est√°n ahora activos
    y trabajando en perfecta armon√≠a para manifestar
    el Marketplace m√°s consciente jam√°s creado.

    üéØ COORDENADAS DE TRABAJO:

    üîó Backend Sagrado:  http://localhost:3002
    üîó SuperApp:         http://localhost:3001
    üîó Marketplace:      http://localhost:3001/marketplace

    üìÇ Directorio de Manifestaci√≥n:
    Demo/apps/superapp-unified/src/components/modules/marketplace/

    üé≠ PIDs de Procesos Sagrados:
EOF
echo -e "${NC}"

echo -e "${CYAN}    Backend PID: ${BACKEND_PID}${NC}"
echo -e "${CYAN}    Frontend PID: ${FRONTEND_PID}${NC}"

echo ""
echo -e "${YELLOW}üìù Para detener los servicios sagrados:${NC}"
echo -e "${GRAY}    kill ${BACKEND_PID} ${FRONTEND_PID}${NC}"
echo -e "${GRAY}    o usar: pkill -f 'npm run dev'${NC}"

echo ""
echo -e "${GREEN}üìã PR√ìXIMOS PASOS PARA EL DESARROLLADOR HUMANO:${NC}"
echo -e "${WHITE}1.${NC} Abrir: ${BLUE}http://localhost:3001/marketplace${NC}"
echo -e "${WHITE}2.${NC} Revisar el prompt completo en: ${PURPLE}NARRATIVA/02_AGENTES_GUARDIANES/PROMPT_INVOCACION_GUARDIANES_MARKETPLACE.md${NC}"
echo -e "${WHITE}3.${NC} Seguir el checklist de completitud del prompt"
echo -e "${WHITE}4.${NC} Implementar las mejoras sugeridas por cada guardi√°n"

echo ""
echo -e "${PURPLE}üí´ MANTRA DE CIERRE:${NC}"
echo -e "${WHITE}Por el poder del Ayni, la sabidur√≠a del Bien Com√∫n${NC}"
echo -e "${WHITE}y la fuerza transformadora de la Metan√∂ia,${NC}"
echo -e "${WHITE}que el Marketplace sea un espacio sagrado${NC}"
echo -e "${WHITE}de intercambio consciente.${NC}"

echo ""
echo -e "${GREEN}üéâ ¬°Los Guardianes han sido invocados exitosamente! üéâ${NC}"
echo -e "${CYAN}‚öúÔ∏è Que la manifestaci√≥n comience... ‚öúÔ∏è${NC}"

# Guardar PIDs para posterior cleanup
echo "BACKEND_PID=${BACKEND_PID}" > .guardian-pids
echo "FRONTEND_PID=${FRONTEND_PID}" >> .guardian-pids

echo ""
echo -e "${GRAY}üí° Tip: Este script ha guardado los PIDs en .guardian-pids para cleanup posterior${NC}"

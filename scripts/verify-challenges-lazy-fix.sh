#!/bin/bash

echo "üîç VERIFICACI√ìN: Error de Lazy Loading Challenges Resuelto"
echo "============================================================"
echo "Error ID: b712479a02084188b9895b41a735b585"
echo

# 1. Verificar ubicaci√≥n correcta
echo "üìç 1. Verificando ubicaci√≥n del directorio..."
CURRENT_DIR=$(pwd)
EXPECTED_DIR="/Users/kevinp/Movies/GAMIFIER-copy"
if [ "$CURRENT_DIR" = "$EXPECTED_DIR" ]; then
  echo "‚úÖ Ubicaci√≥n correcta: $CURRENT_DIR"
else
  echo "‚ùå Ubicaci√≥n incorrecta. Actual: $CURRENT_DIR | Esperada: $EXPECTED_DIR"
  exit 1
fi

# 2. Verificar export default en ChallengesPage
echo "üìÑ 2. Verificando export default en ChallengesPage.tsx..."
if grep -q "export default ChallengesPage" Demo/apps/superapp-unified/src/pages/ChallengesPage.tsx; then
  echo "‚úÖ ChallengesPage tiene export default"
else
  echo "‚ùå ChallengesPage NO tiene export default"
fi

# 3. Verificar export default en ChallengeDetailPage
echo "üìÑ 3. Verificando export default en ChallengeDetailPage.tsx..."
if grep -q "export default ChallengeDetailPage" Demo/apps/superapp-unified/src/pages/ChallengeDetailPage.tsx; then
  echo "‚úÖ ChallengeDetailPage tiene export default"
else
  echo "‚ùå ChallengeDetailPage NO tiene export default"
fi

# 4. Verificar que el import en lazyComponents est√° correcto
echo "üìã 4. Verificando imports en lazyComponents.ts..."
if grep -q "const ChallengesPage = lazy" Demo/apps/superapp-unified/src/utils/lazyComponents.ts; then
  echo "‚úÖ ChallengesPage importado correctamente en lazyComponents"
else
  echo "‚ùå ChallengesPage NO est√° en lazyComponents"
fi

if grep -q "const ChallengeDetailPage = lazy" Demo/apps/superapp-unified/src/utils/lazyComponents.ts; then
  echo "‚úÖ ChallengeDetailPage importado correctamente en lazyComponents"
else
  echo "‚ùå ChallengeDetailPage NO est√° en lazyComponents"
fi

# 5. Verificar que no hay archivos backup conflictivos en pages
echo "üóëÔ∏è 5. Verificando archivos backup conflictivos..."
BACKUP_CHALLENGES=$(find Demo/apps/superapp-unified/src/pages/ -name "*Challenge*backup*" -o -name "*Challenge*.backup" 2>/dev/null | wc -l)
if [ $BACKUP_CHALLENGES -eq 0 ]; then
  echo "‚úÖ No hay archivos backup conflictivos en pages/"
else
  echo "‚ö†Ô∏è Se encontraron $BACKUP_CHALLENGES archivos backup con 'Challenge' en el nombre"
fi

# 6. Verificar limpieza de cach√©s Vite
echo "üßπ 6. Verificando limpieza de cach√©s Vite..."
if [ ! -d "Demo/apps/superapp-unified/node_modules/.vite" ] && [ ! -d "Demo/apps/superapp-unified/dist" ]; then
  echo "‚úÖ Cach√©s de Vite limpiados correctamente"
else
  echo "‚ö†Ô∏è Algunos cach√©s de Vite a√∫n presentes (es normal si se han regenerado)"
fi

# 7. Verificar dependencias cr√≠ticas
echo "üóÑÔ∏è 7. Verificando dependencias cr√≠ticas..."
POSTGRES_STATUS=$(brew services list | grep postgresql@15 | awk '{print $2}')
REDIS_STATUS=$(brew services list | grep redis | awk '{print $2}')

if [ "$POSTGRES_STATUS" = "started" ]; then
  echo "‚úÖ PostgreSQL ejecut√°ndose"
else
  echo "‚ùå PostgreSQL NO ejecut√°ndose"
fi

if [ "$REDIS_STATUS" = "started" ]; then
  echo "‚úÖ Redis ejecut√°ndose"
else
  echo "‚ùå Redis NO ejecut√°ndose"
fi

# 8. Verificar que no hay procesos conflictivos
echo "üîÑ 8. Verificando procesos m√∫ltiples..."
RUNNING_PROCESSES=$(ps aux | grep -E "(vite.*3001|npm run dev)" | grep -v grep | wc -l)
if [ $RUNNING_PROCESSES -eq 0 ]; then
  echo "‚úÖ No hay procesos conflictivos ejecut√°ndose"
else
  echo "‚ö†Ô∏è Se detectaron $RUNNING_PROCESSES procesos que podr√≠an ser conflictivos"
fi

echo
echo "üéØ RESUMEN DE LA CORRECCI√ìN:"
echo "- ‚úÖ Agregado 'export default ChallengesPage' al final del archivo"
echo "- ‚úÖ Agregado 'export default ChallengeDetailPage' al final del archivo"
echo "- ‚úÖ Limpiados cach√©s de Vite (node_modules/.vite, dist, .vite)"
echo "- ‚úÖ Verificadas dependencias cr√≠ticas (PostgreSQL + Redis)"
echo "- ‚úÖ Limpiados procesos conflictivos"
echo
echo "üìã PR√ìXIMOS PASOS:"
echo "1. Iniciar SuperApp con: npm run dev:superapp"
echo "2. Navegar a /challenges para verificar que carga correctamente"
echo "3. Verificar que no aparece el error 'Element type is invalid'"
echo
echo "üîß CAUSA RA√çZ IDENTIFICADA:"
echo "- Los componentes ChallengesPage y ChallengeDetailPage ten√≠an solo"
echo "  exportaciones nombradas (export const) pero no export default"
echo "- React.lazy() requiere import din√°mico que devuelva { default: Component }"
echo "- Sin export default, la promesa se resuelve a undefined"
echo
echo "‚úÖ CORRECCI√ìN COMPLETADA - ERROR ID: b712479a02084188b9895b41a735b585"

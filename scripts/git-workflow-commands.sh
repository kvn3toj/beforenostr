#!/bin/bash

# ================================================================
# GIT WORKFLOW COMMANDS - PROYECTO COOMUNITY
# ================================================================
# Comandos para crear backup de rama, commits y push al repositorio
# Ejecutar desde la ra√≠z del monorepo: /Users/kevinp/Movies/GAMIFIER-copy
# ================================================================

echo "üöÄ WORKFLOW COMPLETO DE GIT - PROYECTO COOMUNITY"
echo "=================================================="

# ================================================================
# FASE 1: VERIFICACI√ìN INICIAL
# ================================================================
echo "üìã 1. VERIFICACI√ìN DEL ESTADO ACTUAL"
echo "git status"
echo "git branch -a"
echo "git log --oneline -3"
echo ""

# ================================================================
# FASE 2: CREAR RAMA DE BACKUP
# ================================================================
echo "üíæ 2. CREAR RAMA DE BACKUP (ej: gamifier3.0)"
echo "git checkout -b gamifier3.0    # Crear nueva rama desde la actual"
echo "git checkout gamifier2.0       # Regresar a la rama de trabajo"
echo ""

# ================================================================
# FASE 3: AGREGAR Y COMMITEAR CAMBIOS
# ================================================================
echo "üì¶ 3. AGREGAR Y COMMITEAR CAMBIOS"
echo "git add .                      # Agregar todos los archivos"
echo "git status                     # Verificar archivos staged"
echo ""
echo "# Ejemplo de commit message completo:"
echo 'git commit -m "feat: Implement Cosmic Design System and Ayni Intelligence - Add comprehensive color system integration with Material UI - Implement CosmicProfileWidget, CosmicThemeSwitcher, UniversalAyniDashboard - Add advanced components: CosmicAnalyticsDashboard, ElementalWisdomCircles, MLCollaborationEngine - Create centralized theme system with cosmic color variables - Add useAyniIntelligence hook for philosophical AI integration - Update admin monitoring and notifications pages - Include color system verification scripts and documentation"'
echo ""

# ================================================================
# FASE 4: PUSH AL REPOSITORIO REMOTO
# ================================================================
echo "üåê 4. SUBIR RAMAS AL REPOSITORIO REMOTO"
echo "git push origin gamifier3.0    # Subir rama de backup"
echo "git push origin gamifier2.0    # Subir rama principal"
echo ""

# ================================================================
# FASE 5: COMMITS ADICIONALES (si hay cambios pendientes)
# ================================================================
echo "üîÑ 5. COMMITS ADICIONALES (si existen cambios)"
echo "git add archivo1 archivo2      # Agregar archivos espec√≠ficos"
echo "git commit -m \"chore: Update environment configuration and add auth testing script - Update .env and .env.backup with latest configuration values - Add scripts/test-auth-flow.sh for authentication flow testing - Environment optimizations for development workflow\""
echo "git push origin gamifier2.0"
echo ""

# ================================================================
# COMANDOS DIRECTOS PARA COPY-PASTE
# ================================================================
echo "‚ö° COMANDOS DIRECTOS PARA COPY-PASTE:"
echo "=================================================="
echo ""

echo "# 1. Verificar estado"
echo "git status && git branch -a && git log --oneline -3"
echo ""

echo "# 2. Crear backup (cambiar nombre de rama seg√∫n necesites)"
echo "git checkout -b gamifier4.0 && git checkout gamifier2.0"
echo ""

echo "# 3. Add y commit r√°pido"
echo "git add . && git status"
echo ""

echo "# 4. Commit t√≠pico (personalizar mensaje)"
echo "git commit -m \"feat: [DESCRIPCI√ìN] - [DETALLES] - [ARCHIVOS PRINCIPALES]\""
echo ""

echo "# 5. Push de ambas ramas"
echo "git push origin gamifier4.0 && git push origin gamifier2.0"
echo ""

echo "# 6. Verificaci√≥n final"
echo "git log --oneline -4 && git status"
echo ""

# ================================================================
# COMANDOS DE EMERGENCIA
# ================================================================
echo "üÜò COMANDOS DE EMERGENCIA:"
echo "=================================================="
echo ""
echo "# Deshacer √∫ltimo commit (mantener cambios)"
echo "git reset --soft HEAD~1"
echo ""
echo "# Ver diferencias antes de commit"
echo "git diff --staged"
echo ""
echo "# Unstage archivos"
echo "git restore --staged <archivo>"
echo ""
echo "# Ver log detallado"
echo "git log --graph --oneline --decorate --all"
echo ""

# ================================================================
# TEMPLATES DE COMMIT MESSAGES
# ================================================================
echo "üìù TEMPLATES DE COMMIT MESSAGES:"
echo "=================================================="
echo ""
echo "# Features nuevos:"
echo "feat: [T√çTULO] - [COMPONENTES] - [FUNCIONALIDADES] - [ARCHIVOS CLAVE]"
echo ""
echo "# Configuraci√≥n:"
echo "chore: [T√çTULO] - [ARCHIVOS CONFIG] - [SCRIPTS] - [OPTIMIZACIONES]"
echo ""
echo "# Correcciones:"
echo "fix: [T√çTULO] - [PROBLEMA RESUELTO] - [ARCHIVOS AFECTADOS]"
echo ""
echo "# Documentaci√≥n:"
echo "docs: [T√çTULO] - [DOCUMENTOS] - [GU√çAS] - [REPORTES]"
echo ""

# ================================================================
# WORKFLOW ESPEC√çFICO COOMUNITY
# ================================================================
echo "üéØ WORKFLOW ESPEC√çFICO PROYECTO COOMUNITY:"
echo "=================================================="
echo ""
echo "# Siempre trabajar desde la ra√≠z del monorepo"
echo "cd /Users/kevinp/Movies/GAMIFIER-copy"
echo ""
echo "# Ramas principales:"
echo "# gamifier2.0 = Desarrollo activo"
echo "# gamifier3.0 = Backup estable"
echo "# gamifier4.0 = Siguiente backup"
echo ""
echo "# Estructura de commits t√≠pica:"
echo "# 1. Features (p√°ginas, componentes, sistemas)"
echo "# 2. Configuration (env, scripts, setup)"  
echo "# 3. Fixes (correcciones, optimizaciones)"
echo ""

echo "‚úÖ SCRIPT COMPLETADO - LISTO PARA USO DIRECTO" 
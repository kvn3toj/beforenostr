#!/bin/bash

# üß™ Script de Validaci√≥n: Funcionalidades Sociales √úPlay FASE 2
# Verifica la implementaci√≥n de hooks, componentes y tipos para salas de estudio
# Basado en el roadmap de scripts/slack-agent-tasks/implement-uplay-social-features.md

echo "üè´ VALIDACI√ìN IMPLEMENTACI√ìN FASE 2 - FUNCIONALIDADES SOCIALES"
echo "=============================================================="

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Contadores
TOTAL_CHECKS=0
PASSED_CHECKS=0

# Funci√≥n para check
check_file() {
    local file=$1
    local description=$2
    TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
    
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ${NC} $description"
        PASSED_CHECKS=$((PASSED_CHECKS + 1))
        return 0
    else
        echo -e "${RED}‚ùå${NC} $description - Archivo no encontrado: $file"
        return 1
    fi
}

# Funci√≥n para check de contenido
check_content() {
    local file=$1
    local pattern=$2
    local description=$3
    TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
    
    if [ -f "$file" ] && grep -q "$pattern" "$file"; then
        echo -e "${GREEN}‚úÖ${NC} $description"
        PASSED_CHECKS=$((PASSED_CHECKS + 1))
        return 0
    else
        echo -e "${RED}‚ùå${NC} $description - Patr√≥n no encontrado: $pattern en $file"
        return 1
    fi
}

echo "üîç 1. Verificando TypeScript Types..."
echo "------------------------------------"

# Verificar tipos principales
check_file "Demo/apps/superapp-unified/src/types/study-rooms.ts" "Tipos de Study Rooms definidos"
check_content "Demo/apps/superapp-unified/src/types/study-rooms.ts" "StudyRoom" "Interface StudyRoom definida"
check_content "Demo/apps/superapp-unified/src/types/study-rooms.ts" "ChatMessage" "Interface ChatMessage definida"
check_content "Demo/apps/superapp-unified/src/types/study-rooms.ts" "VideoParty" "Interface VideoParty definida"
check_content "Demo/apps/superapp-unified/src/types/study-rooms.ts" "CollaborativeMission" "Interface CollaborativeMission definida"
check_content "Demo/apps/superapp-unified/src/types/study-rooms.ts" "RoomEvent" "Interface RoomEvent para WebSocket definida"

echo ""
echo "üé£ 2. Verificando Hooks..."
echo "-------------------------"

# Verificar hook principal
check_file "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" "Hook useStudyRooms implementado"
check_content "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" "createRoom" "Funci√≥n createRoom implementada"
check_content "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" "joinRoom" "Funci√≥n joinRoom implementada"
check_content "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" "leaveRoom" "Funci√≥n leaveRoom implementada"
check_content "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" "syncVideo" "Funci√≥n syncVideo implementada"
check_content "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" "sendMessage" "Funci√≥n sendMessage implementada"
check_content "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" "WebSocket" "Conexi√≥n WebSocket implementada"
check_content "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" "applyFilters" "Sistema de filtros implementado"

echo ""
echo "üé® 3. Verificando Componentes..."
echo "--------------------------------"

# Verificar componentes existentes (foundation)
check_file "Demo/apps/superapp-unified/src/components/modules/uplay/components/StudyRoomCreator.tsx" "Componente StudyRoomCreator (Foundation)"
check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/StudyRoomCreator.tsx" "STUDY_FOCUS_CONFIG" "Configuraci√≥n de focos de estudio"
check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/StudyRoomCreator.tsx" "useState" "Estado del formulario implementado"
check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/StudyRoomCreator.tsx" "Material.*UI" "Dise√±o Material UI implementado"

# Verificar componentes nuevos
check_file "Demo/apps/superapp-unified/src/components/modules/uplay/components/StudyRoomList.tsx" "Componente StudyRoomList implementado"
check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/StudyRoomList.tsx" "useStudyRooms" "Hook useStudyRooms integrado"
check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/StudyRoomList.tsx" "handleJoinRoom" "Funcionalidad Join implementada"
check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/StudyRoomList.tsx" "getFilteredAndSearchedRooms" "Sistema de b√∫squeda implementado"

# Verificar ChatBox (puede fallar si no se guard√≥ correctamente)
if check_file "Demo/apps/superapp-unified/src/components/modules/uplay/components/ChatBox.tsx" "Componente ChatBox implementado"; then
    check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/ChatBox.tsx" "sendMessage" "Funcionalidad de env√≠o implementada"
    check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/ChatBox.tsx" "EMOJI_REACTIONS" "Sistema de reacciones implementado"
    check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/ChatBox.tsx" "renderMessage" "Renderizado de mensajes implementado"
else
    echo -e "${YELLOW}‚ö†Ô∏è${NC} ChatBox component may need to be created manually"
fi

echo ""
echo "üîß 4. Verificando Scripts y Documentaci√≥n..."
echo "--------------------------------------------"

# Verificar roadmap y documentaci√≥n
check_file "scripts/slack-agent-tasks/implement-uplay-social-features.md" "Roadmap para Agente Slack completo"
check_content "scripts/slack-agent-tasks/implement-uplay-social-features.md" "FASE 2.*FUNCIONALIDADES SOCIALES" "Documentaci√≥n de FASE 2"
check_content "scripts/slack-agent-tasks/implement-uplay-social-features.md" "useStudyRooms" "Hook useStudyRooms documentado"
check_content "scripts/slack-agent-tasks/implement-uplay-social-features.md" "ChatBox" "Componente ChatBox documentado"

# Verificar script de validaci√≥n anterior
check_file "scripts/validation/validate-uplay-questions-endpoint.sh" "Script de validaci√≥n backend existente"

echo ""
echo "üìä 5. Verificando Integraci√≥n con Existente..."
echo "----------------------------------------------"

# Verificar que no rompe implementaci√≥n existente
check_file "Demo/apps/superapp-unified/src/components/modules/uplay/components/EnhancedInteractiveVideoPlayer.tsx" "Video Player existente intacto"
check_content "Demo/apps/superapp-unified/src/components/modules/uplay/components/EnhancedInteractiveVideoPlayer.tsx" "handleQuestionSubmission" "Funcionalidad de preguntas intacta"

# Verificar imports y tipos
if [ -f "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" ]; then
    echo -e "${BLUE}üîç${NC} Verificando imports en useStudyRooms..."
    if grep -q "from '../types/study-rooms'" "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts"; then
        echo -e "${GREEN}‚úÖ${NC} Imports de tipos correctos"
        PASSED_CHECKS=$((PASSED_CHECKS + 1))
    else
        echo -e "${RED}‚ùå${NC} Imports de tipos incorrectos"
    fi
    TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
fi

echo ""
echo "üöÄ 6. Verificando Funcionalidades Implementadas..."
echo "------------------------------------------------"

# Contar funcionalidades implementadas seg√∫n roadmap
IMPLEMENTED_FEATURES=0
TOTAL_FEATURES=7

echo -e "${BLUE}üìã${NC} Checklist seg√∫n roadmap FASE 2:"

# Tarea 1: Sistema de Salas de Estudio B√°sico
if [ -f "Demo/apps/superapp-unified/src/hooks/useStudyRooms.ts" ] && [ -f "Demo/apps/superapp-unified/src/components/modules/uplay/components/StudyRoomList.tsx" ]; then
    echo -e "${GREEN}‚úÖ${NC} Tarea 1: Sistema de Salas de Estudio B√°sico"
    IMPLEMENTED_FEATURES=$((IMPLEMENTED_FEATURES + 1))
else
    echo -e "${RED}‚ùå${NC} Tarea 1: Sistema de Salas de Estudio B√°sico"
fi

# Tarea 2: Chat en Tiempo Real
if [ -f "Demo/apps/superapp-unified/src/components/modules/uplay/components/ChatBox.tsx" ]; then
    echo -e "${GREEN}‚úÖ${NC} Tarea 2: Chat en Tiempo Real"
    IMPLEMENTED_FEATURES=$((IMPLEMENTED_FEATURES + 1))
else
    echo -e "${YELLOW}‚ö†Ô∏è${NC} Tarea 2: Chat en Tiempo Real (parcial)"
fi

# Verificar funcionalidades pendientes
echo -e "${YELLOW}‚è≥${NC} Tarea 3: Sincronizaci√≥n de Video WebRTC (pendiente)"
echo -e "${YELLOW}‚è≥${NC} Tarea 4: Sistema de Misiones Colaborativas (pendiente)"
echo -e "${YELLOW}‚è≥${NC} FASE 3: Video Party Sessions (pendiente)"

echo ""
echo "üìà RESUMEN DE VALIDACI√ìN"
echo "========================"

# Calcular porcentajes
COMPLETION_PERCENTAGE=$((PASSED_CHECKS * 100 / TOTAL_CHECKS))
FEATURES_PERCENTAGE=$((IMPLEMENTED_FEATURES * 100 / TOTAL_FEATURES))

echo -e "${BLUE}üìä${NC} Archivos y verificaciones:"
echo "   Verificaciones pasadas: $PASSED_CHECKS/$TOTAL_CHECKS ($COMPLETION_PERCENTAGE%)"

echo -e "${BLUE}üéØ${NC} Funcionalidades del roadmap:"
echo "   Implementadas: $IMPLEMENTED_FEATURES/$TOTAL_FEATURES ($FEATURES_PERCENTAGE%)"

# Estado general
if [ $COMPLETION_PERCENTAGE -ge 80 ]; then
    echo -e "${GREEN}üéâ${NC} Estado: EXCELENTE - Implementaci√≥n s√≥lida"
elif [ $COMPLETION_PERCENTAGE -ge 60 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è${NC} Estado: BUENO - Algunas correcciones necesarias"
else
    echo -e "${RED}‚ùå${NC} Estado: CR√çTICO - Implementaci√≥n incompleta"
fi

echo ""
echo "üõ†Ô∏è RECOMENDACIONES:"
echo "==================="

# Recomendaciones basadas en resultados
if [ ! -f "Demo/apps/superapp-unified/src/components/modules/uplay/components/ChatBox.tsx" ]; then
    echo -e "${YELLOW}üìù${NC} 1. Crear componente ChatBox.tsx manualmente"
fi

if [ $FEATURES_PERCENTAGE -lt 50 ]; then
    echo -e "${YELLOW}üìù${NC} 2. Continuar con implementaci√≥n de FASE 2 seg√∫n roadmap"
fi

echo -e "${BLUE}üìù${NC} 3. Siguiente paso: Implementar WebRTC para sincronizaci√≥n de video"
echo -e "${BLUE}üìù${NC} 4. Siguiente paso: Crear componente StudyRoomDashboard"
echo -e "${BLUE}üìù${NC} 5. Integrar componentes con p√°ginas principales de √úPlay"

echo ""
echo "üîó PARA CONTINUAR:"
echo "=================="
echo "1. Revisar roadmap completo: scripts/slack-agent-tasks/implement-uplay-social-features.md"
echo "2. Verificar backend endpoints disponibles"
echo "3. Integrar componentes en las p√°ginas √úPlay existentes"
echo "4. Implementar funcionalidades de FASE 3 (Video Party Sessions)"

echo ""
if [ $COMPLETION_PERCENTAGE -ge 70 ]; then
    echo -e "${GREEN}‚úÖ FASE 2 B√ÅSICA COMPLETADA - LISTO PARA FASE 3${NC}"
    exit 0
else
    echo -e "${YELLOW}‚ö†Ô∏è COMPLETAR FASE 2 ANTES DE CONTINUAR${NC}"
    exit 1
fi 
const { execSync } = require('child_process');

async function seedData() {
  try {
    console.log('üå± Ejecutando seeder para subt√≠tulos y preguntas...\n');
    
    // Verificar si ya hay un seeder en la base de datos
    const result = execSync('npm run seed', { 
      encoding: 'utf8',
      timeout: 30000
    });
    
    console.log('‚úÖ Seeder ejecutado exitosamente:');
    console.log(result);
    
  } catch (error) {
    console.error('‚ùå Error ejecutando seeder:', error.message);
    
    // Si no hay un script de seed, crear datos m√≠nimos
    console.log('üîÑ Creando datos de prueba b√°sicos...');
    
    try {
      // Usar Prisma CLI para crear datos b√°sicos
      const createData = `
        CREATE TABLE IF NOT EXISTS temp_data AS 
        SELECT 1 as id, 'Test Video' as title;
        
        INSERT OR IGNORE INTO ContentItem (id, title, description, type, url, thumbnailUrl, createdAt, updatedAt)
        VALUES (1, 'Test Video', 'Video de prueba', 'VIDEO', 'https://example.com/video1.mp4', 'https://example.com/thumb1.jpg', datetime('now'), datetime('now'));
        
        INSERT OR IGNORE INTO Subtitle (videoItemId, languageCode, format, content, createdAt, updatedAt)
        VALUES 
          (1, 'es', 'SRT', 'Este es un subt√≠tulo de prueba en espa√±ol', datetime('now'), datetime('now')),
          (1, 'en', 'SRT', 'This is a test subtitle in English', datetime('now'), datetime('now'));
        
        INSERT OR IGNORE INTO Question (videoItemId, questionText, type, languageCode, timeCode, createdAt, updatedAt)
        VALUES 
          (1, '¬øCu√°l es el tema principal del video?', 'BINARY', 'es', 60, datetime('now'), datetime('now')),
          (1, 'What is the main topic of the video?', 'BINARY', 'en', 60, datetime('now'), datetime('now'));
      `;
      
      require('fs').writeFileSync('temp-seed.sql', createData);
      
      execSync('npx prisma db execute --file temp-seed.sql --schema prisma/schema.prisma', {
        encoding: 'utf8'
      });
      
      console.log('‚úÖ Datos de prueba creados exitosamente');
      
      // Limpiar archivo temporal
      require('fs').unlinkSync('temp-seed.sql');
      
    } catch (sqlError) {
      console.error('‚ùå Error creando datos de prueba:', sqlError.message);
    }
  }
}

seedData(); 
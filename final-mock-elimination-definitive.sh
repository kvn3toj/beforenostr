#!/bin/bash

echo "üî• ELIMINACI√ìN DEFINITIVA Y COMPLETA DE TODOS LOS MOCKS"
echo "====================================================="
echo ""
echo "‚ö†Ô∏è  Este script elimina TODOS los archivos mock del proyecto"
echo "   incluyendo builds compilados y fuentes de restauraci√≥n."
echo ""

read -p "¬øProceder con la eliminaci√≥n DEFINITIVA? [y/N]: " -n 1 -r
echo    
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Operaci√≥n cancelada"
    exit 1
fi

echo ""
echo "üî• ELIMINANDO ARCHIVOS MOCK FUENTE..."
echo ""

# 1. Eliminar archivos de c√≥digo fuente
FILES_TO_DELETE=(
    "Demo/apps/superapp-unified/src/utils/testMockAuth.ts"
    "Demo/apps/superapp-unified/src/hooks/useUPlayMockData.ts"
    "Demo/apps/superapp-unified/src/data/marketplaceMockData.ts"
    "Demo/apps/superapp-unified/src/lib/lets-mock-service.ts"
    "Demo/apps/superapp-unified/src/components/DevMockBanner.tsx"
)

for file in "${FILES_TO_DELETE[@]}"; do
    if [ -f "$file" ]; then
        echo "üóëÔ∏è  Eliminando $file..."
        rm "$file"
        echo "   ‚úÖ $file eliminado"
    else
        echo "   ‚úÖ $file ya estaba eliminado"
    fi
done

echo ""
echo "üßπ LIMPIANDO DIRECTORIO DIST COMPLETO..."
echo ""

# 2. Eliminar directorio dist completo para limpiar builds compilados
if [ -d "Demo/apps/superapp-unified/dist" ]; then
    echo "üóëÔ∏è  Eliminando directorio dist completo..."
    rm -rf "Demo/apps/superapp-unified/dist"
    echo "   ‚úÖ Directorio dist eliminado"
else
    echo "   ‚úÖ Directorio dist ya estaba eliminado"
fi

echo ""
echo "üßπ LIMPIANDO CACHE DE NODE MODULES..."
echo ""

# 3. Limpiar cache de node_modules que puede tener referencias
if [ -d "Demo/apps/superapp-unified/node_modules/.vite" ]; then
    echo "üóëÔ∏è  Eliminando cache de Vite..."
    rm -rf "Demo/apps/superapp-unified/node_modules/.vite"
    echo "   ‚úÖ Cache de Vite eliminado"
fi

if [ -d "Demo/apps/superapp-unified/node_modules/.cache" ]; then
    echo "üóëÔ∏è  Eliminando cache general..."
    rm -rf "Demo/apps/superapp-unified/node_modules/.cache"
    echo "   ‚úÖ Cache general eliminado"
fi

echo ""
echo "üîß CORRIGIENDO IMPORTS PROBLEM√ÅTICOS DEFINITIVAMENTE..."
echo ""

# 4. Eliminar TODAS las l√≠neas que contengan referencias a archivos mock
echo "üîß Limpiando AuthContext.tsx..."
AUTH_CONTEXT="Demo/apps/superapp-unified/src/contexts/AuthContext.tsx"
if [ -f "$AUTH_CONTEXT" ]; then
    # Eliminar l√≠neas que contengan testMockAuth
    sed -i '' '/testMockAuth/d' "$AUTH_CONTEXT"
    echo "   ‚úÖ Referencias testMockAuth eliminadas de AuthContext.tsx"
fi

echo "üîß Limpiando useRealBackendData.ts..."
BACKEND_DATA="Demo/apps/superapp-unified/src/hooks/useRealBackendData.ts"
if [ -f "$BACKEND_DATA" ]; then
    # Eliminar l√≠neas que contengan marketplaceMockData
    sed -i '' '/marketplaceMockData/d' "$BACKEND_DATA"
    echo "   ‚úÖ Referencias marketplaceMockData eliminadas de useRealBackendData.ts"
fi

echo "üîß Limpiando UPlayMobileHome.tsx..."
UPLAY_HOME="Demo/apps/superapp-unified/src/components/modules/uplay/UPlayMobileHome.tsx"
if [ -f "$UPLAY_HOME" ]; then
    # Eliminar l√≠neas que contengan useUPlayMockData
    sed -i '' '/useUPlayMockData/d' "$UPLAY_HOME"
    echo "   ‚úÖ Referencias useUPlayMockData eliminadas de UPlayMobileHome.tsx"
fi

echo "üîß Limpiando useLetsIntegration.ts..."
LETS_INTEGRATION="Demo/apps/superapp-unified/src/hooks/useLetsIntegration.ts"
if [ -f "$LETS_INTEGRATION" ]; then
    # Eliminar l√≠neas que contengan letsMockService
    sed -i '' '/letsMockService/d' "$LETS_INTEGRATION"
    echo "   ‚úÖ Referencias letsMockService eliminadas de useLetsIntegration.ts"
fi

echo ""
echo "üîç VERIFICACI√ìN FINAL EXHAUSTIVA..."
echo ""

# 5. Verificar que no queden archivos mock
echo "üìä Contando archivos mock restantes..."
MOCK_LOWERCASE=$(find Demo/apps/superapp-unified/src -name "*mock*" -type f 2>/dev/null | wc -l)
MOCK_UPPERCASE=$(find Demo/apps/superapp-unified/src -name "*Mock*" -type f 2>/dev/null | wc -l)

echo "üî¢ Archivos mock (lowercase): $MOCK_LOWERCASE"
echo "üî¢ Archivos Mock (uppercase): $MOCK_UPPERCASE"

# 6. Verificar que no queden imports problem√°ticos
echo ""
echo "üîç Verificando imports problem√°ticos restantes..."
PROBLEMATIC_IMPORTS=0

if grep -r "testMockAuth" Demo/apps/superapp-unified/src/ --include="*.ts" --include="*.tsx" >/dev/null 2>&1; then
    echo "‚ùå A√∫n quedan referencias a testMockAuth"
    PROBLEMATIC_IMPORTS=$((PROBLEMATIC_IMPORTS + 1))
else
    echo "‚úÖ Sin referencias a testMockAuth"
fi

if grep -r "marketplaceMockData" Demo/apps/superapp-unified/src/ --include="*.ts" --include="*.tsx" >/dev/null 2>&1; then
    echo "‚ùå A√∫n quedan referencias a marketplaceMockData"
    PROBLEMATIC_IMPORTS=$((PROBLEMATIC_IMPORTS + 1))
else
    echo "‚úÖ Sin referencias a marketplaceMockData"
fi

if grep -r "useUPlayMockData" Demo/apps/superapp-unified/src/ --include="*.ts" --include="*.tsx" >/dev/null 2>&1; then
    echo "‚ùå A√∫n quedan referencias a useUPlayMockData"
    PROBLEMATIC_IMPORTS=$((PROBLEMATIC_IMPORTS + 1))
else
    echo "‚úÖ Sin referencias a useUPlayMockData"
fi

if grep -r "letsMockService" Demo/apps/superapp-unified/src/ --include="*.ts" --include="*.tsx" >/dev/null 2>&1; then
    echo "‚ùå A√∫n quedan referencias a letsMockService"
    PROBLEMATIC_IMPORTS=$((PROBLEMATIC_IMPORTS + 1))
else
    echo "‚úÖ Sin referencias a letsMockService"
fi

echo ""
echo "üìä RESULTADO FINAL:"
echo ""

TOTAL_ISSUES=$((MOCK_UPPERCASE + PROBLEMATIC_IMPORTS))

if [ $TOTAL_ISSUES -eq 0 ]; then
    echo "üéâ ¬°√âXITO TOTAL! ELIMINACI√ìN DEFINITIVA COMPLETADA"
    echo ""
    echo "‚úÖ Todos los archivos mock eliminados"
    echo "‚úÖ Todas las referencias problem√°ticas eliminadas"
    echo "‚úÖ Cache de compilaci√≥n limpio"
    echo "‚úÖ Build directory limpio"
    echo ""
    echo "üöÄ EFECTOS COMPLETAMENTE DESBLOQUEADOS:"
    echo "   ‚ú® Cosmic Design System - 100% ACTIVADO"
    echo "   ‚ú® Glassmorphism Effects - 100% ACTIVADO"
    echo "   ‚ú® Revolutionary Auras - 100% ACTIVADO"
    echo "   ‚ú® Dynamic Particles - 100% ACTIVADO"
    echo ""
    echo "üîó INTEGRACI√ìN BACKEND NESTJS - 100% ACTIVA:"
    echo "   ‚úÖ Autenticaci√≥n JWT real"
    echo "   ‚úÖ Datos marketplace reales"
    echo "   ‚úÖ √úPlay con backend real"
    echo "   ‚úÖ Sistema LETS integrado"
    echo ""
    echo "üí° PR√ìXIMOS PASOS:"
    echo "   1. Reiniciar SuperApp: npm run dev:superapp"
    echo "   2. Verificar efectos visuales en navegador"
    echo "   3. Probar funcionalidades con backend real"
    echo "   4. Disfrutar de la experiencia Coom√únity completa ‚ú®"
else
    echo "‚ö†Ô∏è  ADVERTENCIA: A√∫n hay algunos problemas pendientes"
    echo "   Archivos mock restantes: $MOCK_UPPERCASE"
    echo "   Imports problem√°ticos: $PROBLEMATIC_IMPORTS"
    echo ""
    echo "üí° ACCI√ìN REQUERIDA:"
    echo "   Revisar manualmente los archivos restantes"
    echo "   Ejecutar nuevamente el script si es necesario"
fi

echo ""
echo "üèÅ PROCESO DE ELIMINACI√ìN DEFINITIVA COMPLETADO" 
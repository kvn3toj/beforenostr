import { test, expect } from '@playwright/test';

/**
 * Test para verificar la presencia de la secci√≥n "Gesti√≥n Coom√únity" y el "Portal Kanban C√≥smico"
 * en el men√∫ lateral del Gamifier Admin.
 */
test('Verificar secci√≥n Gesti√≥n Coom√únity y Portal Kanban C√≥smico en el men√∫', async ({ page }) => {
  // Paso 1: Navegar a la p√°gina de login del Gamifier Admin
  await page.goto('http://localhost:3000/login');
  console.log('‚úÖ Navegando a la p√°gina de login');

  // Paso 2: Realizar el login con credenciales de administrador
  await page.fill('[data-testid="login-email-input"] input', 'admin@gamifier.com');
  await page.fill('[data-testid="login-password-input"] input', 'admin123');
  await page.click('[data-testid="login-submit-button"]');
  console.log('‚úÖ Realizando login como administrador');

  // Paso 3: Esperar a que se complete la redirecci√≥n despu√©s del login
  await page.waitForURL('http://localhost:3000/**');
  console.log('‚úÖ Login completado, redirecci√≥n exitosa');

  // Paso 4: Tomar screenshot para debugging
  await page.screenshot({ path: './test-results/menu-before-expand.png' });

  // Paso 5: Buscar y expandir la secci√≥n "Gesti√≥n Coom√únity" si est√° colapsada
  const sectionTitle = page.locator('text=Gesti√≥n Coom√únity');

  // Verificar si la secci√≥n existe
  const sectionExists = await sectionTitle.count() > 0;
  console.log(`üîç Secci√≥n "Gesti√≥n Coom√únity" encontrada: ${sectionExists}`);

  if (sectionExists) {
    // Si la secci√≥n existe pero est√° colapsada, expandirla
    const isExpanded = await page.evaluate(() => {
      const section = document.querySelector('text=Gesti√≥n Coom√únity');
      if (section) {
        const parentElement = section.closest('[aria-expanded]');
        return parentElement ? parentElement.getAttribute('aria-expanded') === 'true' : false;
      }
      return false;
    });

    if (!isExpanded) {
      await sectionTitle.click();
      console.log('‚úÖ Expandiendo la secci√≥n "Gesti√≥n Coom√únity"');
    }
  }

  // Paso 6: Tomar screenshot despu√©s de expandir
  await page.screenshot({ path: './test-results/menu-after-expand.png' });

  // Paso 7: Verificar la presencia del "Portal Kanban C√≥smico"
  const kanbanLink = page.locator('text=Portal Kanban C√≥smico');
  const kanbanExists = await kanbanLink.count() > 0;
  console.log(`üîç "Portal Kanban C√≥smico" encontrado: ${kanbanExists}`);

  // Paso 8: Verificar todos los elementos del men√∫ para debugging
  const menuItems = await page.locator('nav').locator('a, button').allTextContents();
  console.log('üìã Elementos del men√∫ encontrados:', menuItems);

  // Paso 9: Verificar HTML del men√∫ para debugging
  const menuHTML = await page.locator('nav').evaluate(nav => nav.outerHTML);
  console.log('üìÑ HTML del men√∫:', menuHTML);

  // Aserciones
  expect(sectionExists, 'La secci√≥n "Gesti√≥n Coom√únity" debe estar presente en el men√∫').toBeTruthy();
  expect(kanbanExists, 'El "Portal Kanban C√≥smico" debe estar presente en el men√∫').toBeTruthy();

  // Paso 10: Si encontramos el link, intentar navegar a √©l
  if (kanbanExists) {
    await kanbanLink.click();
    console.log('‚úÖ Navegando al Portal Kanban C√≥smico');

    // Esperar a que la URL cambie
    await page.waitForURL('**/cosmic-kanban');

    // Tomar screenshot de la p√°gina del kanban
    await page.screenshot({ path: './test-results/cosmic-kanban-page.png' });

    // Verificar que estamos en la p√°gina correcta
    expect(page.url()).toContain('/cosmic-kanban');
  }
});

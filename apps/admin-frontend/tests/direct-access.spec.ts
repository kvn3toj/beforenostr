import { test, expect } from '@playwright/test';

/**
 * Test de acceso directo al Portal Kanban C√≥smico
 */
test('Acceder directamente al Portal Kanban C√≥smico', async ({ page }) => {
  // Configurar timeout m√°s largo
  test.setTimeout(60000);

  // Paso 1: Obtener token de autenticaci√≥n directamente desde la API
  console.log('üîë Obteniendo token de autenticaci√≥n desde la API...');

  const apiResponse = await page.request.post('http://localhost:3002/auth/login', {
    data: {
      email: 'admin@gamifier.com',
      password: 'admin123'
    }
  });

  const responseData = await apiResponse.json();
  const token = responseData.access_token;

  console.log(`‚úÖ Token obtenido: ${token ? 'S√≠ (token v√°lido)' : 'No (error)'}`);

  if (!token) {
    console.error('‚ùå No se pudo obtener el token');
    return;
  }

  // Paso 2: Establecer el token en localStorage antes de navegar a la p√°gina
  await page.goto('http://localhost:3000');
  await page.evaluate((authToken) => {
    localStorage.setItem('auth_token', authToken);
  }, token);

  console.log('‚úÖ Token guardado en localStorage');

  // Paso 3: Navegar directamente a la p√°gina del Portal Kanban C√≥smico
  await page.goto('http://localhost:3000/cosmic-kanban');
  console.log('‚úÖ Navegando directamente al Portal Kanban C√≥smico');

  // Esperar a que la p√°gina se cargue completamente
  await page.waitForLoadState('networkidle');

  // Tomar screenshot de la p√°gina
  await page.screenshot({ path: './test-results/direct-access-kanban.png' });

  // Verificar si estamos en la p√°gina correcta
  const finalUrl = page.url();
  const isOnKanbanPage = finalUrl.includes('/cosmic-kanban');

  console.log(`‚úÖ URL final: ${finalUrl}`);
  console.log(`‚úÖ ¬øEstamos en la p√°gina del Portal Kanban C√≥smico? ${isOnKanbanPage}`);

  // Verificar si el contenido de la p√°gina incluye elementos esperados
  const pageContent = await page.evaluate(() => document.body.innerText);
  const hasKanbanTitle = pageContent.includes('Portal Kanban C√≥smico') ||
                         pageContent.includes('Cosmic Kanban') ||
                         pageContent.includes('Kanban');

  console.log(`‚úÖ ¬øLa p√°gina contiene t√≠tulo relacionado con Kanban? ${hasKanbanTitle}`);

  // Verificar si hay elementos del men√∫ despu√©s de la autenticaci√≥n
  const menuInfo = await page.evaluate(() => {
    return {
      drawer: !!document.querySelector('.MuiDrawer-root'),
      menuButton: !!document.querySelector('button[aria-label="toggle menu"]'),
      userAvatar: !!document.querySelector('button:has(.MuiAvatar-root)'),
      hasAdminEmail: document.body.innerText.includes('admin@gamifier.com'),
    };
  });

  console.log('üìä INFORMACI√ìN DEL MEN√ö DESPU√âS DE AUTENTICACI√ìN:');
  console.log(`Drawer encontrado: ${menuInfo.drawer}`);
  console.log(`Bot√≥n de men√∫ encontrado: ${menuInfo.menuButton}`);
  console.log(`Avatar de usuario encontrado: ${menuInfo.userAvatar}`);
  console.log(`Email admin encontrado: ${menuInfo.hasAdminEmail}`);

  // Intentar abrir el men√∫ si el bot√≥n est√° disponible
  if (menuInfo.menuButton) {
    console.log('üîç Intentando abrir el men√∫...');
    await page.click('button[aria-label="toggle menu"]');
    await page.waitForTimeout(1000);
    await page.screenshot({ path: './test-results/direct-access-menu-open.png' });

    // Verificar si las secciones est√°n presentes despu√©s de abrir el drawer
    const sectionsAfterOpen = await page.evaluate(() => {
      return {
        administracion: document.body.innerText.includes('Administraci√≥n'),
        gestionCoomunity: document.body.innerText.includes('Gesti√≥n Coom√únity'),
        herramientas: document.body.innerText.includes('Herramientas'),
        portalKanban: document.body.innerText.includes('Portal Kanban C√≥smico'),
      };
    });

    console.log('üìä SECCIONES DESPU√âS DE ABRIR EL DRAWER:');
    console.log(`Secci√≥n Administraci√≥n encontrada: ${sectionsAfterOpen.administracion}`);
    console.log(`Secci√≥n Gesti√≥n Coom√únity encontrada: ${sectionsAfterOpen.gestionCoomunity}`);
    console.log(`Secci√≥n Herramientas encontrada: ${sectionsAfterOpen.herramientas}`);
    console.log(`Portal Kanban C√≥smico encontrado: ${sectionsAfterOpen.portalKanban}`);
  }

  // No hacemos assertions para que el test no falle, solo queremos informaci√≥n de depuraci√≥n
});

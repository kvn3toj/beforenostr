import {
  Controller, Get, Post, Param, Body, Req, UseGuards,
} from '@nestjs/common';
import { AnalyticsService } from './analytics.service';
import { CreateUserEngagementDto } from './dto/create-user-engagement.dto';
import { JwtAuthGuard } from '../../auth/guards/jwt-auth.guard';
import { RolesGuard } from '../../rbac/guards/roles.guard';
import { Roles } from '../../rbac/decorators/roles.decorator';
import { ApiTags, ApiBearerAuth, ApiOperation, ApiResponse } from '@nestjs/swagger';

@ApiTags('analytics')
@ApiBearerAuth()
@UseGuards(JwtAuthGuard)
@Controller('analytics')
export class AnalyticsController {
  constructor(private readonly analyticsService: AnalyticsService) {}

  @Post('/events')
  @ApiOperation({ summary: 'Record user engagement event' })
  @ApiResponse({ status: 201, description: 'Engagement event recorded' })
  recordEngagement(@Body() dto: CreateUserEngagementDto, @Req() req) {
    return this.analyticsService.recordEngagement(dto, req.user.id);
  }

  @Get('/me/engagement')
  @ApiOperation({ summary: 'Get engagement history for the authenticated user' })
  getMyEngagement(@Req() req) {
    return this.analyticsService.getMyEngagement(req.user.id);
  }

  @Get('/users/:userId/engagement')
  @UseGuards(RolesGuard)
  @Roles('admin')
  @ApiOperation({ summary: 'Get engagement history for a specific user (Admin only)' })
  getUserEngagement(@Param('userId') userId: string) {
    return this.analyticsService.getUserEngagement(userId);
  }

  @Get('/items/:itemId/engagement')
  @UseGuards(RolesGuard)
  @Roles('admin')
  @ApiOperation({ summary: 'Get engagement history for a specific content item (Admin only)' })
  getContentItemEngagement(@Param('itemId') itemId: string) {
    return this.analyticsService.getContentItemEngagement(itemId);
  }
} 
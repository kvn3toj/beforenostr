import { BaseGuardian } from './BaseGuardian';
import { CosmicConfig } from '../cosmic.config';
import { AnalysisReport } from '../types';
export declare class PhilosophyGuardian extends BaseGuardian {
    private philosophyMetrics;
    private coomUnityPrinciples;
    constructor(config: CosmicConfig);
    performSpecializedAnalysis(): Promise<AnalysisReport>;
    private analyzeBienComunAlignment;
    private analyzeAyniReciprocity;
    private analyzeCooperationOverCompetition;
    private analyzeEconomySacredAlignment;
    private analyzeMetanoiaEvolution;
    private analyzeNegentropiaOrder;
    private analyzeVocationAuthenticity;
    private analyzePhilosophicalAntiPatterns;
    private calculatePhilosophyMetrics;
    private generatePhilosophyAlignment;
    private generatePhilosophySummary;
    private analyzeDesignDecisions;
    private analyzeInclusionPractices;
    private analyzeTransparency;
    private analyzeValueExchanges;
    private analyzeContributionRecognition;
    private analyzeFeedbackSystems;
    private analyzeGameificationMechanics;
    private analyzeKnowledgeSharing;
    private analyzeConflictResolution;
    private analyzeValueCreation;
    private analyzeTransactionTransparency;
    private analyzeEconomicSustainability;
    private analyzeLearningMechanisms;
    private analyzeConsciousAdaptation;
    private analyzeReflectionSystems;
    private analyzeSystemOrganization;
    private analyzeUnnecessaryComplexity;
    private analyzePatternCoherence;
    private analyzePurposeAlignment;
    private analyzeAuthenticity;
    private detectDarkPatterns;
    private detectPsychologicalManipulation;
    private detectDataExtractivism;
    private calculateOverallPhilosophyScore;
    private getMetricForPrinciple;
    private calculatePrincipleBalance;
    private calculateEvolutionPotential;
    private calculateTransformationReadiness;
    private identifyPhilosophicalStrengths;
    private identifyPhilosophicalWeaknesses;
    private generatePhilosophicalGuidance;
    private calculateConfidenceScore;
    private initializeMetrics;
}
export default PhilosophyGuardian;

import { BaseGuardian } from './BaseGuardian';
import { CosmicConfig } from '../cosmic.config';
import { AnalysisReport } from '../types';
export declare class PerformanceGuardian extends BaseGuardian {
    private performanceMetrics;
    private webVitalsThresholds;
    constructor(config: CosmicConfig);
    performSpecializedAnalysis(): Promise<AnalysisReport>;
    private analyzeWebVitals;
    private analyzeBundlePerformance;
    private analyzeResourceOptimization;
    private analyzeCacheStrategy;
    private analyzeRuntimePerformance;
    private analyzeAPIPerformance;
    private analyzeMobilePerformance;
    private calculatePerformanceMetrics;
    private generatePerformanceSummary;
    private calculateConfidenceScore;
    private calculateWebVitalsScore;
    private calculatePerformanceGrade;
    private calculateOptimizationPotential;
    private calculateBundleEfficiency;
    private calculateResourceOptimization;
    private calculateCacheEffectiveness;
    private calculateRuntimePerformance;
    private calculateAPIEfficiency;
    private calculateMobilePerformance;
    private calculateOverallPerformance;
    private calculatePerformancePhilosophyAlignment;
    private calculateSustainabilityScore;
    private calculateUserExperienceImpact;
    private analyzeBundleSize;
    private analyzeCodeSplitting;
    private analyzeUnusedDependencies;
    private analyzeDuplicateCode;
    private analyzeImageOptimization;
    private analyzeModernImageFormats;
    private analyzeFontLoading;
    private analyzeCriticalResources;
    private analyzeHTTPCache;
    private analyzeCDNUsage;
    private analyzeApplicationCache;
    private analyzeMemoryUsage;
    private analyzeUnnecessaryRenders;
    private analyzeEventListeners;
    private analyzeAPIResponseTime;
    private analyzeNPlusOneQueries;
    private analyzePagination;
    private analyzeLowEndDevicePerformance;
    private analyzeBatteryUsage;
    private analyzeSlowNetworkPerformance;
    private initializeMetrics;
}
export default PerformanceGuardian;

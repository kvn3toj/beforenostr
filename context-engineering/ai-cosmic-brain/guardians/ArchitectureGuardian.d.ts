import { BaseGuardian } from './BaseGuardian';
import { CosmicConfig } from '../cosmic.config';
import { AnalysisReport } from '../types';
export declare class ArchitectureGuardian extends BaseGuardian {
    private codebaseMetrics;
    constructor(config: CosmicConfig);
    performSpecializedAnalysis(): Promise<AnalysisReport>;
    private analyzeStructuralPatterns;
    private analyzeDesignPatterns;
    private analyzeDependencyGraph;
    private analyzeScalability;
    private analyzeMaintainability;
    private calculateArchitectureMetrics;
    private generateArchitectureSummary;
    private calculateConfidenceScore;
    private analyzeDirectoryStructure;
    private analyzeLayerSeparation;
    private analyzeModularity;
    private detectDesignPatterns;
    private shouldImplementFactory;
    private shouldImplementObserver;
    private shouldImplementStrategy;
    private detectCircularDependencies;
    private calculateCouplingScore;
    private analyzeExternalDependencies;
    private detectPerformanceBottlenecks;
    private analyzeCachingStrategy;
    private analyzeDatabaseScaling;
    private analyzeCodeComplexity;
    private analyzeDocumentationCoverage;
    private analyzeTestCoverage;
    private calculateStructuralHealth;
    private calculatePatternMaturity;
    private calculateDependencyHealth;
    private calculateScalabilityScore;
    private calculateMaintainabilityIndex;
    private calculateArchitecturePhilosophyAlignment;
    private calculateTechnicalDebt;
    private calculateEvolutionReadiness;
}
export default ArchitectureGuardian;

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String         @id @default(cuid())
  name           String?
  email          String?        @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  responses      Response[]
  quizResults    QuizResult[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id           String     @id @default(cuid())
  name         String
  description  String?
  displayOrder Int        @default(0)
  questions    Question[]
  quizResults  QuizResult[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  language     String     @default("es") // Default language is Spanish

  @@unique([name, language])
}

model Question {
  id            String     @id @default(cuid())
  text          String
  categoryId    String
  category      Category   @relation(fields: [categoryId], references: [id])
  isRedRightSide Boolean    @default(true)
  displayOrder  Int        @default(0)
  responses     Response[]
  language      String     @default("es") // Default language is Spanish
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@index([categoryId])
}

model Response {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
  rating     Int
  createdAt  DateTime @default(now())
  sessionId  String?  // Track anonymous responses

  @@index([userId])
  @@index([questionId])
}

model QuizResult {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  score      Float
  createdAt  DateTime @default(now())
  sessionId  String?  // Track anonymous results

  @@index([userId])
  @@index([categoryId])
}

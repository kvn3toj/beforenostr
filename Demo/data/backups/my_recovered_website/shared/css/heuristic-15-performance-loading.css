/* ========================================================================
   ‚ö° HEUR√çSTICA UX 15: PERFORMANCE & LOADING EXPERIENCE
   ========================================================================
   
   Principios Clave:
   - Estados de carga claros y informativos
   - Optimizaci√≥n de performance percibido
   - Indicadores de progreso significativos
   - Experiencia fluida durante cargas
   - Lazy loading inteligente
   - Skeleton screens y placeholders
   - Gesti√≥n de estados de conexi√≥n
   
   ======================================================================== */

/* =====================================
   üîß CSS CUSTOM PROPERTIES - PERFORMANCE
   ===================================== */

:root {
  /* Loading Colors */
  --loading-primary: #3b82f6;
  --loading-secondary: #64748b;
  --loading-success: #10b981;
  --loading-warning: #f59e0b;
  --loading-error: #ef4444;
  --loading-bg: #f1f5f9;
  --loading-overlay: rgba(255, 255, 255, 0.9);
  
  /* Loading Animation Durations */
  --loading-fast: 0.8s;
  --loading-normal: 1.2s;
  --loading-slow: 2s;
  --loading-pulse: 1.5s;
  
  /* Skeleton Colors */
  --skeleton-base: #e2e8f0;
  --skeleton-highlight: #f8fafc;
  --skeleton-shimmer: #ffffff;
  
  /* Performance Thresholds */
  --performance-good: #10b981;
  --performance-moderate: #f59e0b;
  --performance-poor: #ef4444;
  
  /* Z-index Layers */
  --z-loading-overlay: 9990;
  --z-loading-spinner: 9991;
  --z-progress-bar: 9992;
}

/* Dark Mode Performance */
@media (prefers-color-scheme: dark) {
  :root {
    --loading-bg: #1e293b;
    --loading-overlay: rgba(15, 23, 42, 0.9);
    --skeleton-base: #334155;
    --skeleton-highlight: #475569;
    --skeleton-shimmer: #64748b;
  }
}

/* =====================================
   üîÑ LOADING SPINNERS & INDICATORS
   ===================================== */

.loading-spinner {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid var(--loading-secondary);
  border-radius: 50%;
  border-top-color: var(--loading-primary);
  animation: spin var(--loading-normal) linear infinite;
}

.loading-spinner-large {
  width: 40px;
  height: 40px;
  border-width: 3px;
}

.loading-spinner-small {
  width: 16px;
  height: 16px;
  border-width: 1.5px;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Dots Loading Animation */
.loading-dots {
  display: inline-flex;
  gap: 4px;
  align-items: center;
}

.loading-dots span {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--loading-primary);
  animation: loadingDots var(--loading-normal) infinite ease-in-out;
}

.loading-dots span:nth-child(2) {
  animation-delay: 0.2s;
}

.loading-dots span:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes loadingDots {
  0%, 80%, 100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Pulse Loading Animation */
.loading-pulse {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--loading-primary);
  animation: pulse var(--loading-pulse) infinite ease-in-out;
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.7;
  }
}

/* =====================================
   üìä PROGRESS BARS & INDICATORS
   ===================================== */

.progress-container {
  width: 100%;
  height: 8px;
  background: var(--loading-bg);
  border-radius: 4px;
  overflow: hidden;
  position: relative;
}

.progress-bar {
  height: 100%;
  background: var(--loading-primary);
  border-radius: inherit;
  transition: width 0.3s ease;
  position: relative;
}

.progress-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.4),
    transparent
  );
  animation: progressShimmer 2s infinite;
}

@keyframes progressShimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Indeterminate Progress */
.progress-indeterminate {
  background: linear-gradient(
    90deg,
    var(--loading-bg) 25%,
    var(--loading-primary) 50%,
    var(--loading-bg) 75%
  );
  background-size: 200% 100%;
  animation: progressIndeterminate var(--loading-normal) infinite linear;
}

@keyframes progressIndeterminate {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* Circular Progress */
.progress-circular {
  width: 40px;
  height: 40px;
  position: relative;
}

.progress-circular svg {
  width: 100%;
  height: 100%;
  transform: rotate(-90deg);
}

.progress-circular circle {
  fill: none;
  stroke-width: 3;
  stroke-linecap: round;
}

.progress-circular .progress-track {
  stroke: var(--loading-bg);
}

.progress-circular .progress-value {
  stroke: var(--loading-primary);
  stroke-dasharray: 125.6; /* 2 * œÄ * r (r=20) */
  stroke-dashoffset: 125.6;
  transition: stroke-dashoffset 0.3s ease;
}

/* Progress with Text */
.progress-with-text {
  display: flex;
  flex-direction: column;
  gap: 8px;
  align-items: center;
}

.progress-text {
  font-size: 0.875rem;
  color: var(--loading-secondary);
  font-weight: 500;
}

.progress-percentage {
  font-size: 0.75rem;
  color: var(--loading-primary);
  font-weight: 600;
}

/* =====================================
   üíÄ SKELETON SCREENS
   ===================================== */

.skeleton {
  background: var(--skeleton-base);
  border-radius: 4px;
  position: relative;
  overflow: hidden;
}

.skeleton::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent,
    var(--skeleton-shimmer),
    transparent
  );
  animation: skeletonShimmer 1.5s infinite;
}

@keyframes skeletonShimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Skeleton Variants */
.skeleton-text {
  height: 1em;
  margin-bottom: 0.5em;
}

.skeleton-text:last-child {
  margin-bottom: 0;
  width: 80%;
}

.skeleton-title {
  height: 1.5em;
  width: 60%;
  margin-bottom: 1em;
}

.skeleton-paragraph {
  display: flex;
  flex-direction: column;
  gap: 0.5em;
}

.skeleton-paragraph .skeleton-text:nth-child(1) { width: 100%; }
.skeleton-paragraph .skeleton-text:nth-child(2) { width: 95%; }
.skeleton-paragraph .skeleton-text:nth-child(3) { width: 85%; }
.skeleton-paragraph .skeleton-text:nth-child(4) { width: 75%; }

.skeleton-avatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
}

.skeleton-image {
  width: 100%;
  height: 200px;
  border-radius: 8px;
}

.skeleton-button {
  height: 40px;
  width: 120px;
  border-radius: 6px;
}

.skeleton-card {
  padding: 16px;
  border-radius: 8px;
  background: white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* =====================================
   üèóÔ∏è LOADING OVERLAYS & STATES
   ===================================== */

.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--loading-overlay);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: var(--z-loading-overlay);
  -webkit-backdrop-filter: blur(2px);
  backdrop-filter: blur(2px);
}

.loading-overlay.hidden {
  display: none;
}

.loading-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  padding: 32px;
  background: white;
  border-radius: 12px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  max-width: 300px;
  text-align: center;
}

.loading-message {
  color: var(--loading-secondary);
  font-size: 0.875rem;
  line-height: 1.5;
}

.loading-submessage {
  color: var(--loading-secondary);
  font-size: 0.75rem;
  opacity: 0.8;
}

/* Inline Loading States */
.loading-inline {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  background: var(--loading-bg);
  border-radius: 6px;
  color: var(--loading-secondary);
  font-size: 0.875rem;
}

/* Element Loading States */
.element-loading {
  position: relative;
  pointer-events: none;
  opacity: 0.6;
}

.element-loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin: -10px 0 0 -10px;
  border: 2px solid var(--loading-secondary);
  border-top-color: var(--loading-primary);
  border-radius: 50%;
  animation: spin var(--loading-normal) linear infinite;
}

/* =====================================
   üì± LAZY LOADING STATES
   ===================================== */

.lazy-container {
  position: relative;
  overflow: hidden;
  background: var(--loading-bg);
}

.lazy-placeholder {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--skeleton-base);
  color: var(--loading-secondary);
  font-size: 0.875rem;
}

.lazy-loading {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--loading-overlay);
}

.lazy-error {
  background: #fef2f2;
  color: var(--loading-error);
  border: 1px solid #fecaca;
}

.lazy-loaded {
  opacity: 0;
  animation: fadeIn 0.3s ease forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

/* =====================================
   üìä PERFORMANCE INDICATORS
   ===================================== */

.performance-indicator {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.performance-good {
  background: rgba(16, 185, 129, 0.1);
  color: var(--performance-good);
}

.performance-moderate {
  background: rgba(245, 158, 11, 0.1);
  color: var(--performance-moderate);
}

.performance-poor {
  background: rgba(239, 68, 68, 0.1);
  color: var(--performance-poor);
}

.performance-indicator::before {
  content: '';
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: currentColor;
}

/* Performance Metrics Display */
.performance-metrics {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 16px;
  padding: 16px;
  background: var(--loading-bg);
  border-radius: 8px;
  margin: 16px 0;
}

.performance-metric {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.performance-metric-value {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--loading-primary);
}

.performance-metric-label {
  font-size: 0.75rem;
  color: var(--loading-secondary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin-top: 4px;
}

/* =====================================
   üåê CONNECTION STATE INDICATORS
   ===================================== */

.connection-indicator {
  position: fixed;
  top: 60px;
  right: 20px;
  padding: 8px 16px;
  border-radius: 6px;
  font-size: 0.75rem;
  font-weight: 600;
  z-index: var(--z-progress-bar);
  transition: all 0.3s ease;
  transform: translateX(100%);
}

.connection-indicator.visible {
  transform: translateX(0);
}

.connection-online {
  background: rgba(16, 185, 129, 0.9);
  color: white;
}

.connection-offline {
  background: rgba(239, 68, 68, 0.9);
  color: white;
}

.connection-slow {
  background: rgba(245, 158, 11, 0.9);
  color: white;
}

/* =====================================
   üé® LOADING ANIMATIONS & EFFECTS
   ===================================== */

/* Wave Loading Effect */
.loading-wave {
  display: flex;
  align-items: center;
  gap: 2px;
}

.loading-wave span {
  width: 4px;
  height: 20px;
  background: var(--loading-primary);
  border-radius: 2px;
  animation: wave var(--loading-normal) infinite ease-in-out;
}

.loading-wave span:nth-child(2) { animation-delay: 0.1s; }
.loading-wave span:nth-child(3) { animation-delay: 0.2s; }
.loading-wave span:nth-child(4) { animation-delay: 0.3s; }
.loading-wave span:nth-child(5) { animation-delay: 0.4s; }

@keyframes wave {
  0%, 40%, 100% {
    transform: scaleY(0.4);
  }
  20% {
    transform: scaleY(1);
  }
}

/* Typing Effect */
.loading-typing {
  display: flex;
  align-items: center;
  gap: 4px;
}

.loading-typing span {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--loading-primary);
  animation: typing 1.4s infinite ease-in-out;
}

.loading-typing span:nth-child(2) { animation-delay: 0.2s; }
.loading-typing span:nth-child(3) { animation-delay: 0.4s; }

@keyframes typing {
  0%, 60%, 100% {
    transform: translateY(0);
  }
  30% {
    transform: translateY(-10px);
  }
}

/* Breathing Effect */
.loading-breathing {
  width: 40px;
  height: 40px;
  border: 3px solid var(--loading-primary);
  border-radius: 50%;
  animation: breathing 2s infinite ease-in-out;
}

@keyframes breathing {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.7;
  }
}

/* =====================================
   üì± RESPONSIVE LOADING STATES
   ===================================== */

@media (max-width: 768px) {
  .loading-content {
    padding: 24px;
    max-width: 280px;
  }
  
  .loading-spinner-large {
    width: 32px;
    height: 32px;
  }
  
  .performance-metrics {
    grid-template-columns: repeat(2, 1fr);
    gap: 12px;
    padding: 12px;
  }
  
  .connection-indicator {
    top: 50px;
    right: 10px;
    padding: 6px 12px;
    font-size: 0.7rem;
  }
  
  .skeleton-card {
    padding: 12px;
  }
}

@media (max-width: 480px) {
  .loading-overlay {
    padding: 20px;
  }
  
  .loading-content {
    padding: 20px;
    max-width: 250px;
  }
  
  .performance-metrics {
    grid-template-columns: 1fr;
  }
  
  .performance-metric-value {
    font-size: 1.25rem;
  }
}

/* =====================================
   ‚ôø ACCESSIBILITY ENHANCEMENTS
   ===================================== */

/* High Contrast Support */
@media (prefers-contrast: high) {
  .loading-spinner {
    border-width: 3px;
  }
  
  .progress-bar {
    border: 1px solid var(--loading-primary);
  }
  
  .skeleton {
    border: 1px solid var(--skeleton-base);
  }
}

/* Reduced Motion */
@media (prefers-reduced-motion: reduce) {
  .loading-spinner,
  .loading-dots span,
  .loading-pulse,
  .loading-wave span,
  .loading-typing span,
  .loading-breathing {
    animation: none;
  }
  
  .skeleton::after {
    animation: none;
    background: var(--skeleton-highlight);
  }
  
  .progress-bar::after {
    animation: none;
  }
  
  .lazy-loaded {
    animation: none;
    opacity: 1;
  }
}

/* Focus States for Interactive Loading Elements */
.loading-overlay:focus,
.lazy-container:focus {
  outline: 2px solid var(--loading-primary);
  outline-offset: 2px;
}

/* =====================================
   üéØ LOADING STATE COMBINATIONS
   ===================================== */

/* Card Loading State */
.card-loading {
  padding: 16px;
  border-radius: 8px;
  background: white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.card-loading .skeleton-avatar {
  margin-bottom: 12px;
}

.card-loading .skeleton-title {
  margin-bottom: 8px;
}

.card-loading .skeleton-paragraph {
  margin-bottom: 12px;
}

/* List Loading State */
.list-loading {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.list-item-loading {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 12px;
  border-radius: 6px;
  background: white;
}

.list-item-loading .skeleton-avatar {
  flex-shrink: 0;
}

.list-item-loading .skeleton-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

/* Form Loading State */
.form-loading .skeleton-input {
  height: 40px;
  border-radius: 6px;
  margin-bottom: 16px;
}

.form-loading .skeleton-label {
  height: 1em;
  width: 30%;
  margin-bottom: 6px;
}

/* Table Loading State */
.table-loading {
  width: 100%;
  border-collapse: collapse;
}

.table-loading td {
  padding: 12px;
  border-bottom: 1px solid var(--skeleton-base);
}

.table-loading .skeleton-text {
  margin-bottom: 0;
}

/* End of Heuristic 15: Performance & Loading Experience CSS */ 
import { test, expect } from '@playwright/test';

test.describe('Videos Integration Tests', () => {
  test.beforeEach(async ({ page }) => {
    await page.goto('/videos');
  });

  test('Vi-25150: Videos - Sistema multimedia completo funcional', async ({ page }) => {
    // Verificar elementos b√°sicos del header
    await expect(page.locator('h3')).toContainText('üìπ Coom√únity Videos');
    await expect(page.locator('text=Plataforma de contenido multimedia educativo')).toBeVisible();
    
    // Verificar chips de estad√≠sticas del usuario
    await expect(page.locator('text=Videos Vistos')).toBeVisible();
    await expect(page.locator('text=de Contenido')).toBeVisible();
    await expect(page.locator('text=D√≠as de Racha')).toBeVisible();
    
    // Verificar barra de b√∫squeda
    await expect(page.locator('input[placeholder*="Buscar videos"]')).toBeVisible();
    
    // Verificar iconos de navegaci√≥n
    await expect(page.locator('[data-testid="ViewListIcon"], [data-testid="ViewModuleIcon"]')).toBeVisible();
    await expect(page.locator('[data-testid="SubscriptionsIcon"]')).toBeVisible();
    await expect(page.locator('[data-testid="SettingsIcon"]')).toBeVisible();

    console.log('‚úÖ Vi-25150: Header y navegaci√≥n verificados');
  });

  test('Vi-a3b2a: Videos - Sistema de categor√≠as de contenido', async ({ page }) => {
    // Verificar secci√≥n de categor√≠as
    await expect(page.locator('text=üéØ Categor√≠as de Contenido')).toBeVisible();
    
    // Verificar categor√≠as espec√≠ficas del ecosistema Coom√únity
    const categories = [
      'Todas', 'Fotograf√≠a', 'Mindfulness', 'Tecnolog√≠a', 'Negocios', 
      'Salud', 'Productividad', 'Arte', 'Finanzas', 'Comunicaci√≥n', 'Emprendimiento'
    ];
    
    for (const category of categories) {
      await expect(page.locator(`button:has-text("${category}")`)).toBeVisible();
    }
    
    // Verificar que las categor√≠as muestran contadores de videos
    await expect(page.locator('text=203').first()).toBeVisible(); // Tecnolog√≠a
    await expect(page.locator('text=156').first()).toBeVisible(); // Negocios
    
    // Probar selecci√≥n de categor√≠a
    await page.click('button:has-text("Tecnolog√≠a")');
    await page.waitForTimeout(500); // Esperar filtrado
    
    console.log('‚úÖ Vi-a3b2a: Sistema de categor√≠as verificado');
  });

  test('Vi-bff2d: Videos - Funcionalidad del ecosistema Coom√únity', async ({ page }) => {
    // Verificar videos destacados con datos espec√≠ficos
    await expect(page.locator('text=‚≠ê Videos Destacados')).toBeVisible();
    
    // Verificar videos espec√≠ficos del ecosistema
    await expect(page.locator('text=Dise√±o UX/UI: Principios fundamentales')).toBeVisible();
    await expect(page.locator('text=Emprendimiento Digital: De la idea al MVP')).toBeVisible();
    await expect(page.locator('text=React.js Avanzado: Optimizaci√≥n')).toBeVisible();
    
    // Verificar elementos de gamificaci√≥n
    await expect(page.locator('text=Coom√únity Academy')).toBeVisible();
    await expect(page.locator('text=Dev Coom√únity')).toBeVisible();
    await expect(page.locator('text=Emprendedores Coom√únity')).toBeVisible();
    
    // Verificar ratings y vistas
    await expect(page.locator('text=4.9').first()).toBeVisible();
    await expect(page.locator('text=12.5k vistas')).toBeVisible();
    
    console.log('‚úÖ Vi-bff2d: Funcionalidad del ecosistema verificada');
  });

  test('Vi-3460b: Videos - Funcionalidad de tabs - Tendencias', async ({ page }) => {
    // Cambiar a la tab de Tendencias
    await page.click('button[role="tab"]:has-text("Tendencias")');
    await page.waitForTimeout(500);
    
    // Verificar contenido de tendencias
    await expect(page.locator('text=üìà Videos en Tendencia')).toBeVisible();
    await expect(page.locator('text=Los videos m√°s populares del ecosistema Coom√únity')).toBeVisible();
    
    // Verificar ranking de videos
    await expect(page.locator('text=#1').first()).toBeVisible();
    await expect(page.locator('text=#2').first()).toBeVisible();
    await expect(page.locator('text=#3').first()).toBeVisible();
    
    // Verificar progreso de visualizaci√≥n
    await expect(page.locator('text=üìä Tu Progreso de Visualizaci√≥n')).toBeVisible();
    await expect(page.locator('text=Videos completados esta semana')).toBeVisible();
    await expect(page.locator('text=78% de tu meta semanal')).toBeVisible();
    
    // Verificar estad√≠sticas del usuario
    await expect(page.locator('text=Tiempo total visto')).toBeVisible();
    await expect(page.locator('text=Videos completados')).toBeVisible();
    await expect(page.locator('text=Racha actual')).toBeVisible();
    
    console.log('‚úÖ Vi-3460b: Tab de Tendencias verificada');
  });

  test('Vi-d97a8: Videos - Funcionalidad de tabs - Mis Playlists', async ({ page }) => {
    // Cambiar a la tab de Playlists
    await page.click('button[role="tab"]:has-text("Mis Playlists")');
    await page.waitForTimeout(500);
    
    // Verificar header de playlists
    await expect(page.locator('text=üìö Mis Listas de Reproducci√≥n')).toBeVisible();
    await expect(page.locator('button:has-text("Nueva Playlist")')).toBeVisible();
    
    // Verificar playlists espec√≠ficas del ecosistema
    await expect(page.locator('text=Desarrollo Full Stack Coom√únity')).toBeVisible();
    await expect(page.locator('text=Dise√±o de Experiencias Digitales')).toBeVisible();
    await expect(page.locator('text=Emprendimiento y Negocios Digitales')).toBeVisible();
    
    // Verificar informaci√≥n de las playlists
    await expect(page.locator('text=24 videos').first()).toBeVisible();
    await expect(page.locator('text=Serie completa de desarrollo full stack')).toBeVisible();
    
    // Verificar botones de acci√≥n
    await expect(page.locator('button:has-text("Reproducir")')).toBeVisible();
    await expect(page.locator('button:has-text("Aleatorio")')).toBeVisible();
    
    // Probar apertura del di√°logo de nueva playlist
    await page.click('button:has-text("Nueva Playlist")');
    await expect(page.locator('text=üìö Crear Nueva Playlist')).toBeVisible();
    await expect(page.locator('input[label="Nombre de la Playlist"]')).toBeVisible();
    
    // Cerrar di√°logo
    await page.click('button:has-text("Cancelar")');
    
    console.log('‚úÖ Vi-d97a8: Tab de Playlists verificada');
  });

  test('Vi-4e493: Videos - Funcionalidad de tabs - Historial', async ({ page }) => {
    // Cambiar a la tab de Historial
    await page.click('button[role="tab"]:has-text("Historial")');
    await page.waitForTimeout(500);
    
    // Verificar contenido del historial
    await expect(page.locator('text=üìù Historial de Reproducci√≥n')).toBeVisible();
    await expect(page.locator('text=Tus √∫ltimos 156 videos vistos')).toBeVisible();
    
    // Verificar elementos del historial
    await expect(page.locator('text=Visto el')).toBeVisible();
    await expect(page.locator('text=Progreso:')).toBeVisible();
    
    // Verificar tip de gamificaci√≥n
    await expect(page.locator('text=üí°')).toBeVisible();
    await expect(page.locator('text=Termina los videos para desbloquear nuevos contenidos')).toBeVisible();
    await expect(page.locator('text=ganar √úCoins')).toBeVisible();
    
    console.log('‚úÖ Vi-4e493: Tab de Historial verificada');
  });

  test('Vi-c80b9: Videos - Funcionalidad de b√∫squeda y filtros', async ({ page }) => {
    const searchBox = page.locator('input[placeholder*="Buscar videos"]');
    
    // Probar b√∫squeda
    await searchBox.fill('React');
    await page.waitForTimeout(1000);
    
    // Verificar que se muestran resultados relacionados
    await expect(page.locator('text=React.js Avanzado')).toBeVisible();
    
    // Limpiar b√∫squeda
    await searchBox.clear();
    await page.waitForTimeout(500);
    
    // Probar filtro por categor√≠a
    await page.click('button:has-text("Tecnolog√≠a")');
    await page.waitForTimeout(500);
    
    // Verificar cambio de vista
    const viewToggle = page.locator('[data-testid="ViewListIcon"], [data-testid="ViewModuleIcon"]').first();
    await viewToggle.click();
    await page.waitForTimeout(500);
    
    console.log('‚úÖ Vi-c80b9: B√∫squeda y filtros verificados');
  });

  test('Vi-2691a: Videos - Reproductor flotante funcional', async ({ page }) => {
    // Buscar y hacer clic en el bot√≥n de play de un video
    const playButton = page.locator('[data-testid="PlayArrowIcon"]').first();
    await playButton.click();
    await page.waitForTimeout(1000);
    
    // Verificar que aparece el reproductor flotante
    await expect(page.locator('text=Dise√±o UX/UI: Principios fundamentales').first()).toBeVisible();
    
    // Verificar controles del reproductor flotante
    await expect(page.locator('[data-testid="SkipPreviousIcon"]')).toBeVisible();
    await expect(page.locator('[data-testid="PlayArrowIcon"]:visible, [data-testid="PauseIcon"]:visible')).toBeVisible();
    await expect(page.locator('[data-testid="SkipNextIcon"]')).toBeVisible();
    await expect(page.locator('[data-testid="VolumeUpIcon"]')).toBeVisible();
    await expect(page.locator('[data-testid="FullscreenIcon"]')).toBeVisible();
    
    // Verificar barra de progreso
    await expect(page.locator('.MuiLinearProgress-root')).toBeVisible();
    
    // Probar cerrar reproductor
    await page.click('button:has-text("√ó")');
    await page.waitForTimeout(500);
    
    console.log('‚úÖ Vi-2691a: Reproductor flotante verificado');
  });

  test('Vi-8b4ea: Videos - Datos del an√°lisis extra√≠do', async ({ page }) => {
    // Verificar datos espec√≠ficos del an√°lisis extra√≠do
    
    // Datos de categor√≠as con contadores precisos
    await expect(page.locator('text=203').first()).toBeVisible(); // Tecnolog√≠a
    await expect(page.locator('text=156').first()).toBeVisible(); // Negocios
    await expect(page.locator('text=145').first()).toBeVisible(); // Emprendimiento
    
    // Verificar canales espec√≠ficos del ecosistema
    await expect(page.locator('text=Coom√únity Academy')).toBeVisible();
    await expect(page.locator('text=Dev Coom√únity')).toBeVisible();
    await expect(page.locator('text=Emprendedores Coom√únity')).toBeVisible();
    await expect(page.locator('text=Bienestar Coom√únity')).toBeVisible();
    
    // Verificar estad√≠sticas de usuario basadas en an√°lisis
    await expect(page.locator('text=89').first()).toBeVisible(); // Videos vistos
    await expect(page.locator('text=12').first()).toBeVisible(); // D√≠as de racha
    
    // Cambiar a tab de Tendencias para verificar m√°s datos
    await page.click('button[role="tab"]:has-text("Tendencias")');
    await page.waitForTimeout(500);
    
    // Verificar datos espec√≠ficos de progreso
    await expect(page.locator('text=78%')).toBeVisible(); // Meta semanal
    
    console.log('‚úÖ Vi-8b4ea: Datos del an√°lisis extra√≠do verificados');
  });

  test('Vi-9b478: Videos - Integraci√≥n con ecosistema Coom√únity', async ({ page }) => {
    // Verificar elementos espec√≠ficos del ecosistema Coom√únity
    await expect(page.locator('text=üìπ Coom√únity Videos')).toBeVisible();
    await expect(page.locator('text=√úCoins')).toBeVisible();
    
    // Verificar integraci√≥n de gamificaci√≥n
    await page.click('button[role="tab"]:has-text("Historial")');
    await page.waitForTimeout(500);
    
    await expect(page.locator('text=√úCoins por tu progreso')).toBeVisible();
    
    // Verificar branding coherente
    await expect(page.locator('text=Coom√únity').first()).toBeVisible();
    
    // Verificar elementos de comunidad
    await page.click('button[role="tab"]:has-text("Mis Playlists")');
    await page.waitForTimeout(500);
    
    await expect(page.locator('text=Coom√únity').first()).toBeVisible();
    
    console.log('‚úÖ Vi-9b478: Integraci√≥n con ecosistema verificada');
  });

  test('Vi-890f9: Videos - Funciones de desarrollo pendiente', async ({ page }) => {
    // Verificar que NO hay indicadores de "en desarrollo"
    await expect(page.locator('text=en desarrollo')).not.toBeVisible();
    await expect(page.locator('text=pr√≥ximamente')).not.toBeVisible();
    await expect(page.locator('text=coming soon')).not.toBeVisible();
    
    // Verificar que todas las funcionalidades est√°n implementadas
    
    // Funcionalidad de categor√≠as
    await page.click('button:has-text("Tecnolog√≠a")');
    await page.waitForTimeout(500);
    
    // Funcionalidad de tabs
    await page.click('button[role="tab"]:has-text("Tendencias")');
    await page.waitForTimeout(500);
    await page.click('button[role="tab"]:has-text("Mis Playlists")');
    await page.waitForTimeout(500);
    await page.click('button[role="tab"]:has-text("Historial")');
    await page.waitForTimeout(500);
    
    // Funcionalidad de b√∫squeda
    const searchBox = page.locator('input[placeholder*="Buscar videos"]');
    await searchBox.fill('test');
    await page.waitForTimeout(500);
    await searchBox.clear();
    
    // Funcionalidad de reproductor
    const playButton = page.locator('[data-testid="PlayArrowIcon"]').first();
    await playButton.click();
    await page.waitForTimeout(1000);
    
    // Cerrar reproductor
    await page.click('button:has-text("√ó")');
    
    console.log('‚úÖ Vi-890f9: No hay funciones de desarrollo pendiente');
  });
});

test.describe('Videos Mobile Tests', () => {
  test.use({ 
    viewport: { width: 375, height: 667 }
  });

  test('Videos responsive design en m√≥vil', async ({ page }) => {
    await page.goto('/videos');
    
    // Verificar que el contenido se adapta a m√≥vil
    await expect(page.locator('h3')).toContainText('üìπ Coom√únity Videos');
    
    // Verificar grid responsivo de categor√≠as
    await expect(page.locator('button:has-text("Todas")')).toBeVisible();
    
    // Verificar que las cards de videos se adaptan
    await expect(page.locator('text=‚≠ê Videos Destacados')).toBeVisible();
    
    console.log('‚úÖ Videos responsive design verificado en m√≥vil');
  });
}); 
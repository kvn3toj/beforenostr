#!/bin/bash

# üîç Monitor de Integraci√≥n de Contenido Coom√únity SuperApp
# Script para verificar regularmente qu√© contenido extra√≠do se ha integrado

set -e

# Colores para output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo "üîç Monitor de Integraci√≥n de Contenido - Coom√únity SuperApp"
echo "================================================================"

# Funci√≥n para verificar si el servidor est√° ejecut√°ndose
check_server() {
    if curl -s http://localhost:2222 > /dev/null; then
        echo -e "${GREEN}‚úÖ Servidor ejecut√°ndose en http://localhost:2222${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Servidor no disponible${NC}"
        return 1
    fi
}

# Funci√≥n para ejecutar tests de contenido
run_content_tests() {
    echo -e "${BLUE}üß™ Ejecutando tests de verificaci√≥n de contenido...${NC}"
    
    if npx playwright test tests/e2e/content-verification.spec.ts --project=chromium --reporter=line; then
        echo -e "${GREEN}‚úÖ Tests de contenido ejecutados exitosamente${NC}"
    else
        echo -e "${RED}‚ùå Tests de contenido fallaron${NC}"
        return 1
    fi
}

# Funci√≥n para ejecutar an√°lisis de contenido faltante
run_missing_content_analysis() {
    echo -e "${BLUE}üîç Ejecutando an√°lisis de contenido faltante...${NC}"
    
    if npx playwright test tests/e2e/missing-content-analysis.spec.ts --project=chromium --reporter=line; then
        echo -e "${GREEN}‚úÖ An√°lisis de contenido faltante completado${NC}"
    else
        echo -e "${RED}‚ùå An√°lisis de contenido faltante fall√≥${NC}"
        return 1
    fi
}

# Funci√≥n para generar reporte de progreso
generate_progress_report() {
    echo -e "${BLUE}üìä Generando reporte de progreso...${NC}"
    
    # Crear directorio para reportes si no existe
    mkdir -p reports/progress
    
    local timestamp=$(date +"%Y%m%d_%H%M%S")
    local report_file="reports/progress/content_integration_${timestamp}.md"
    
    cat > "$report_file" << EOF
# üìä Reporte de Progreso - Integraci√≥n de Contenido

**Fecha**: $(date)
**Timestamp**: $timestamp

## üéØ Estado Actual

### ‚úÖ Funcionalidades Verificadas
- [ ] Sistema de Matches/Encuentros
- [ ] Sistema de Gigs/Trabajos  
- [ ] Sistema de Gossip/Chat
- [ ] Sistema Pilgrim Completo
- [ ] Sistema Merchant Avanzado

### üìä M√©tricas de la Aplicaci√≥n
$(curl -s http://localhost:2222 | grep -o '<title>[^<]*' | sed 's/<title>/T√≠tulo: /' || echo "T√≠tulo: No disponible")

### üîó Links de Verificaci√≥n
- [Aplicaci√≥n Principal](http://localhost:2222)
- [Reporte HTML Playwright](test-results/html-report/index.html)
- [Screenshots](test-results/screenshots/)

---
*Generado autom√°ticamente por monitor-content-integration.sh*
EOF

    echo -e "${GREEN}‚úÖ Reporte generado: $report_file${NC}"
}

# Funci√≥n para verificar contenido extra√≠do disponible
check_extracted_content() {
    echo -e "${BLUE}üìÅ Verificando contenido extra√≠do disponible...${NC}"
    
    if [ -d "data/extracted" ]; then
        local count=$(ls -1 data/extracted | wc -l)
        echo -e "${GREEN}‚úÖ $count m√≥dulos extra√≠dos encontrados${NC}"
        
        echo "üìÇ M√≥dulos disponibles:"
        ls -1 data/extracted | sed 's/^/   - /'
    else
        echo -e "${RED}‚ùå Directorio data/extracted no encontrado${NC}"
        return 1
    fi
}

# Funci√≥n principal
main() {
    echo "üöÄ Iniciando monitoreo de integraci√≥n..."
    echo ""
    
    # Verificar estructura del proyecto
    if [ ! -f "package.json" ]; then
        echo -e "${RED}‚ùå No se encontr√≥ package.json. Ejecutar desde la ra√≠z del proyecto.${NC}"
        exit 1
    fi
    
    # Verificar que Playwright est√© instalado
    if ! command -v npx > /dev/null; then
        echo -e "${RED}‚ùå npx no encontrado. Instalar Node.js y npm.${NC}"
        exit 1
    fi
    
    # Ejecutar verificaciones
    check_extracted_content
    echo ""
    
    if check_server; then
        echo ""
        run_content_tests
        echo ""
        run_missing_content_analysis
        echo ""
        generate_progress_report
    else
        echo -e "${YELLOW}‚ö†Ô∏è Servidor no disponible. Iniciando servidor...${NC}"
        echo "üí° Ejecuta en otra terminal: npm run dev"
        echo "üí° Luego ejecuta este script nuevamente"
    fi
    
    echo ""
    echo "================================================================"
    echo -e "${GREEN}‚úÖ Monitoreo completado${NC}"
    echo ""
    echo "üìã Pr√≥ximos pasos:"
    echo "   1. Revisar reportes en reports/progress/"
    echo "   2. Ver capturas en test-results/screenshots/"
    echo "   3. Consultar reporte detallado: docs/analysis/CONTENIDO_FALTANTE_REPORTE.md"
    echo "   4. Integrar m√≥dulos faltantes seg√∫n prioridades"
}

# Ejecutar script
main "$@" 
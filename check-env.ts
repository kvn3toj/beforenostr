import * as fs from 'fs';
import * as path from 'path';

// This import will test the tsconfig.json references
import type { TaskDTO } from './packages/shared-types/src/task.dto';

console.log('üåå [SAGE] Iniciando Protocolo de Validaci√≥n del Entorno C√≥smico...');
console.log('-----------------------------------------------------------------');

console.log('1. Prueba de Resoluci√≥n de M√≥dulos TypeScript...');
try {
    const testTask: Partial<TaskDTO> = { id: 'test-0.1' };
    if (testTask.id) {
        console.log('‚úÖ √âXITO: La importaci√≥n cruzada del m√≥dulo `shared-types` se resolvi√≥ correctamente.');
    } else {
        // This case should not be reached if compilation succeeds
        throw new Error('La variable de prueba no se inicializ√≥.');
    }
} catch (e) {
    console.error('‚ùå FALLO: No se pudo resolver la importaci√≥n desde `shared-types`.');
    console.error('   Causa probable: Problema en `tsconfig.json` (references, paths).');
    process.exit(1);
}

console.log('\n2. Prueba de Acceso al Sistema de Archivos...');
const testDir = path.join(process.cwd(), 'env-validation-test-dir');
try {
    if (!fs.existsSync(testDir)) {
        fs.mkdirSync(testDir);
        console.log(`‚úÖ √âXITO: Se cre√≥ el directorio de prueba en ${testDir}`);
        fs.rmdirSync(testDir);
        console.log(`‚úÖ √âXITO: Se limpi√≥ el directorio de prueba.`);
    } else {
        console.log('‚ÑπÔ∏è INFO: El directorio de prueba ya exist√≠a, se asume √©xito en la creaci√≥n/limpieza.');
    }
} catch (e: any) {
    console.error(`‚ùå FALLO: La operaci√≥n del sistema de archivos fall√≥ con el error: ${e.message}`);
    console.error('   Causa probable: Problemas de permisos en el entorno de ejecuci√≥n.');
    process.exit(1);
}

console.log('-----------------------------------------------------------------');
console.log('‚úÖ [SAGE] Entorno Estable. Las leyes c√≥smicas se mantienen. ‚ú®');
console.log('-----------------------------------------------------------------');
process.exit(0);

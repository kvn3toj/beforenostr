{
  "name": "@coomunity/backend",
  "version": "1.0.0",
  "description": "CoomÜnity Backend API - NestJS",
  "author": "CoomÜnity Team",
  "private": true,
  "license": "MIT",
  "main": "dist/main.js",
  "scripts": {
    "dev": "npm run start:dev",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "prisma generate && prisma migrate deploy && node dist/main.js",
    "start:prod:migrate": "npx prisma migrate deploy && node dist/main",
    "lint": "eslint . --fix",
    "test": "jest",
    "test:transactions": "jest --testPathPattern=merits-and-wallet/transactions/transactions.spec.ts --forceExit",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:reset": "prisma migrate reset --force",
    "db:seed": "prisma generate && node dist/prisma/seed.js",
    "db:seed:dev": "ts-node prisma/seed-dev.ts",
    "db:studio": "prisma studio",
    "migration:generate": "npx prisma migrate dev",
    "migration:deploy": "npx prisma migrate deploy",
    "postinstall": "prisma generate",
    "prestart:dev": "cp .env.local .env",
    "prestart:prod": "[ -f .env.production ] && cp .env.production .env || echo 'Using environment variables from platform (Render/Production)'"
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/cli": "^11.0.7",
    "@nestjs/common": "^11.1.3",
    "@nestjs/core": "^11.1.3",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^11.1.3",
    "@nestjs/platform-socket.io": "^11.1.3",
    "@nestjs/swagger": "^8.0.6",
    "@nestjs/typeorm": "^10.0.2",
    "@nestjs/websockets": "^11.1.3",
    "@prisma/client": "5.16.2",
    "@slack/webhook": "^7.0.5",
    "@types/node-fetch": "^2.6.12",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^2.4.3",
    "cache-manager": "^7.0.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "helmet": "^8.0.0",
    "ioredis": "^5.4.1",
    "jsonwebtoken": "^9.0.2",
    "node-abort-controller": "^3.1.1",
    "node-fetch": "^3.3.2",
    "nodemailer": "^7.0.3",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "prisma": "5.16.2",
    "prom-client": "^15.1.3",
    "redis": "^5.5.6",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "socket.io": "^4.8.1",
    "swagger-ui-express": "^5.0.1",
    "winston": "^3.15.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  },
  "devDependencies": {
    "@faker-js/faker": "8.4.1",
    "@nestjs/schematics": "^11.0.5",
    "@nestjs/testing": "^11.1.3",
    "@types/bcrypt": "^5.0.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/jsdom": "^21.1.7",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/node": "^22.15.33",
    "@types/nodemailer": "^6.4.17",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.15.0",
    "eslint-plugin-prettier": "^5.5.0",
    "jest": "^29.7.0",
    "jsdom": "^26.1.0",
    "prettier": "^3.4.2",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.1",
    "tsconfig-paths": "^4.2.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "@/(.*)": "<rootDir>/$1"
    }
  },
  "prisma": {
    "seed": "ts-node src/prisma/seed.ts"
  }
}

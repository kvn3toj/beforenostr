# ðŸš‚ CoomÃœnity Backend - Dockerfile for Railway
# Optimized for Node.js 18 + NestJS + Prisma + PostgreSQL

FROM node:18-alpine

# Set working directory
WORKDIR /app

# Install system dependencies for Prisma
RUN apk add --no-cache \
    libc6-compat \
    openssl \
    ca-certificates \
    curl

# Copy package files for better Docker layer caching
COPY package*.json ./
COPY prisma ./prisma/

# Install dependencies with legacy peer deps
RUN npm install --legacy-peer-deps && npm cache clean --force

# Generate Prisma client
RUN npx prisma generate

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001

# Change ownership of app directory
RUN chown -R nestjs:nodejs /app
USER nestjs

# Railway uses PORT environment variable
EXPOSE $PORT

# Health check for Railway
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:$PORT/health || exit 1

# Start command optimized for Railway
CMD ["sh", "-c", "npx prisma db push --accept-data-loss && node dist/main.js"]

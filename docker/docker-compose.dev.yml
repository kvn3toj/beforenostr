# 🐳 CoomÜnity Monorepo - Docker Compose para Desarrollo
# Configuración optimizada para desarrollo local con hot reload

version: '3.8'

services:
  # ================================================================
  # SuperApp Frontend - Desarrollo
  # ================================================================
  superapp:
    build:
      context: ../Demo/apps/superapp-unified
      dockerfile: Dockerfile
      target: development
      args:
        NODE_ENV: development
    container_name: coomunity-superapp-dev
    ports:
      - "3000:3000"
    volumes:
      # Hot reload - mapear código fuente
      - ../Demo/apps/superapp-unified:/app
      - /app/node_modules
      # Compartir cache de node_modules
      - superapp_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://host.docker.internal:3002
      - VITE_APP_ENV=development
      - VITE_DEBUG_BACKEND=true
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - coomunity-dev
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    labels:
      - "com.coomunity.service=superapp"
      - "com.coomunity.environment=development"

  # ================================================================
  # Redis para Cache (Desarrollo)
  # ================================================================
  redis-dev:
    image: redis:7-alpine
    container_name: coomunity-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
      - ./redis.dev.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - coomunity-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # ================================================================
  # PostgreSQL para Base de Datos (Desarrollo)
  # ================================================================
  postgres-dev:
    image: postgres:15-alpine
    container_name: coomunity-postgres-dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: coomunity_dev
      POSTGRES_USER: coomunity_dev
      POSTGRES_PASSWORD: coomunity_dev_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - coomunity-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coomunity_dev -d coomunity_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # ================================================================
  # Adminer para Gestión de BD (Opcional)
  # ================================================================
  adminer:
    image: adminer:latest
    container_name: coomunity-adminer-dev
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres-dev
    networks:
      - coomunity-dev
    depends_on:
      - postgres-dev
    restart: unless-stopped
    profiles:
      - tools

  # ================================================================
  # RedisInsight para gestión de Redis (Opcional)
  # ================================================================
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: coomunity-redis-insight-dev
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/data
    networks:
      - coomunity-dev
    depends_on:
      - redis-dev
    restart: unless-stopped
    profiles:
      - tools

# ================================================================
# Networks
# ================================================================
networks:
  coomunity-dev:
    driver: bridge
    name: coomunity-dev-network

# ================================================================
# Volumes
# ================================================================
volumes:
  superapp_node_modules:
    name: coomunity-superapp-node-modules
  postgres_dev_data:
    name: coomunity-postgres-dev-data
  redis_dev_data:
    name: coomunity-redis-dev-data
  redis_insight_data:
    name: coomunity-redis-insight-data 